//=========================================//
// Map Name    : アフターランド　お宝アイランド     //
//=========================================//
// Mob Name    : 
// Mob Level   : 
// Mob HP      : 
// Mob Exp     : 
//=========================================//
// comment     : None
// param       : None
// return      : None
// ========================================//
// Display Dpl : 800x600 or 1366x768
//=========================================//
// Copy Right (C) 2018 All Right Reserved. 
//   @author k.kawabata @kawaken1025
//     Create Date : 2018/07/22
//=========================================//

//MapleAPI : LogWriter.uws , MapleLibrary.uws , UseSkillFiveJob.uws
CALL ../MapleAPI/MapleAPI.uws;
//import Luminous skillKeySetting
CALL KeySetting.uws;
//Move Window initSetting x = 1 , y = 1
lib.activeWindow();
//multiThread checkRedPoint and checkMineralization
thread lib.parallelProgram();

//=========================================
//  Main Script Start
//=========================================

public leaveFlag = false;
public upCounter = 0;
//エクリブリアムモードであるかどうかのフラグ
public isEqulibrium = false;
//時刻の取得     : 3分経過していたらスキルをかかけなおす
public reUseSkillTime = GETTIME( 180 / 86400 );
public leaveTime = GETTIME( 480 / 86400 );

skill.luminous_useSkill();
   
while true;

    	//右へ行く
    	ret = roundTripTeleportAttack(VK_RIGHT,200,126,220,160);
    	if leaveFlag then entry();

        //3分経過していたらループを抜け出す
        ifb GETTIME() > reUseSkillTime
        	skill.luminous_useSkill();
        	reUseSkillTime = GETTIME( 180 / 86400 );
        endif

    	//左へ行く
    	ret = roundTripTeleportAttack(VK_LEFT,0,0,25,160);
    	if leaveFlag then entry();

    	upCounter = upCounter + 1;
    	

    	//上段へ行く処理
    	ifb upCounter > 2
    		upCounter = 0
    		ret = upstage()
    		if leaveFlag then entry();
    	endif

wend


function roundTripTeleportAttack(execKBD_Move, x1, y1, x2, y2 );

	KBD(execKBD_Move,1,500);
	
	while true;
        useSkill.reflection(key.REFLECTION_KEY);
        useSkill.teleport(key.TELEPORT_KEY);
		if chkimg("../picture/黄点.bmp",0,x1,y1,x2,y2) then break;
		ifb chkimg("../picture/緑点.bmp",0,0,0,400,400)
			leaveFlag = true;
			KBD(execKBD_Move,2,500);
			exit
		endif
		if chkimg("../picture/mysterMAP.bmp",0,0,0,400,400) then exitexit;
		IF CHKIMG("../picture/扉.BMP",0,0,0,1368,800) THEN KBD(key.PSYCHOLOGY_DOOR_KEY,0,500)
	wend;

	KBD(execKBD_Move,2,500);

	result = 0;
fend


function upStage()

	KBD(VK_RIGHT,1,500)
	sleep(1.5)
	while true
	    KBD(VK_UP,0,50)
	    if chkimg("../picture/黄点.bmp",0,125,105,215,151) then break;
	   	ifb chkimg("../picture/緑点.bmp",0,0,0,400,400)
			leaveFlag = true;
			KBD(VK_RIGHT,2,300)
			exit
		endif
		if chkimg("../picture/mysterMAP.bmp",0,0,0,400,400) then exitexit;
    wend
	KBD(VK_RIGHT,2,300)
	KBD(VK_D,0,500)
		
	result = 0
fend

function entry()

	SLEEP(1)
	sellEquipment()

	KBD(VK_LEFT,1,300)
	for i = 1 to 15
		KBD(key.TELEPORT_KEY,0,500)
	next
	KBD(VK_LEFT,2,200)

	KBD(VK_RIGHT,1,200)
	errorTime = GETTIME( 10 / 86400 );
	while true
		if chkimg("../picture/黄点.bmp",0,64,115,72,130) then break;
		if GETTIME() > errorTime then break;
	wend
	KBD(VK_RIGHT,2)

	KBD(VK_UP,0,200)
	KBD(VK_UP,0,200)
	KBD(VK_UP,0,200)
	SLEEP(5)
	leaveTime = GETTIME( 480 / 86400 );
	leaveFlag = false;

	result = 0

fend

function sellEquipment()

	sleep(2)
	KBD(VK_HOME,0,1000);
	sleep(0.5)
	ifb chkimg("../picture/myster.bmp",0,0,0,1366,768)
		for i = 1 to 3
			BTN(LEFT,CLICK,G_IMG_X,G_IMG_Y,200);
		next
		KBD(VK_ENTER,0,500);
	else
		KBD(VK_HOME,0,500);
		exit;
	endif
	KBD(VK_HOME,0,6000);

	for i = 1 to 5
		BTN(LEFT,CLICK,330,550,200);
	next

	for i = 1 to 30
		BTN(RIGHT,CLICK,762,307,100);
		BTN(RIGHT,CLICK,762,307,100);
		//if chkimg("../picture/equipmentEmpty.bmp",0,0,0,1366,768) then break;
	next
	KBD(VK_ESC,0,1000)

	sleep(1)

	KBD(VK_UP,0,200)
	KBD(VK_UP,0,200)
	KBD(VK_UP,0,200)

	sleep(4)

	
	result = 0;
fend

