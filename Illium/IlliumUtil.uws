//=========================================//
// Illium Utility Class
// comment     : None
// param       : None
// return      : None
// ========================================//
// Display Dpl : 800x600 or 1366x768
//=========================================//
// Copy Right (C) 2018 All Right Reserved. 
//   @author k.kawabata @kawaken1025
//     Create Date : 2018/00/00
//=========================================//

CALL ../lib/MapleLibrary.uws;
//import Luminous skillKeySetting
CALL KeySetting.uws;

class util
//------------------------------------------
// comment : オーブ位置固定攻撃
//------------------------------------------
function attack(moveKey)
    for i = 1 to 5
        useSkill.javelin(key.JAVELIN_KEY);
        useSkill.orb(key.ORB_KEY);
        if chkimg(lib.picPathHelper("Longinus"),0,0,0,1366,800) then KBD(key.LONGINUS_KEY,0,700);
        skill.illiumSkillCheck(key.DEUS_KEY,key.FAST_CHARGE_KEY,key.LONGINUS_KEY,key.RACE_OF_GOD_KEY,key.GRAM_HOLDER_KEY);
        skill.pSkill()
    next
    lib.urgentCheck();
    lib.checkGameMaster();
    KBD(moveKey,1,300)
    KBD(moveKey,2,300)
    
    
    result = 0
fend

//------------------------------------------
// comment : クリスタルを移動させて攻撃
//------------------------------------------
function moveCrystalAttack(moveKey)
    //for i = 1 to 2
    useSkill.moveCrystal(key.CRYSTAL_KEY)
    for i = 1 to 2
        sleep(0.5);
        useSkill.javelin(key.JAVELIN_KEY);
        useSkill.orb(key.ORB_KEY);
        if chkimg(lib.picPathHelper("Longinus"),0,800,600,1366,800) then KBD(key.LONGINUS_KEY,0,700);
        skill.illiumSkillCheck(key.DEUS_KEY,key.FAST_CHARGE_KEY,key.LONGINUS_ZONE_KEY,key.RACE_OF_GOD_KEY,key.GRAM_HOLDER_KEY);
        skill.pSkill();
        if chkimg(lib.picPathHelper("CrystalIgnition"),0,800,600,1366,800) then useSkill.crystalIgnition(key.IGNITION_KEY,key.CRYSTAL_KEY);
    next
    KBD(key.SOUL_OF_CRYSTAL_KEY,0,750);
    lib.urgentCheck();
    lib.checkGameMaster();
    KBD(moveKey,1,100)
    KBD(moveKey,2,50)
    
    result = 0
fend

//------------------------------------------
// comment : ソウルオブクリスタルを使用してクリスタルを移動させて攻撃
//------------------------------------------
function moveSoulOfCrystalAttack(moveKey)
    //for i = 1 to 2
    useSkill.moveCrystal(key.CRYSTAL_KEY)
    KBD(moveKey,1,100)
    KBD(moveKey,2,50)
    for i = 1 to 3
        KBD(key.SOUL_OF_CRYSTAL_KEY,0,150);
    next
    for i = 1 to 2
        sleep(0.5);
        useSkill.javelin(key.JAVELIN_KEY);
        useSkill.orb(key.ORB_KEY);
        ifb chkimg(lib.picPathHelper("Longinus"),0,800,600,1366,800)
            for i = 1 to 7
                KBD(key.LONGINUS_KEY,0,150);
            next
        endif
        skill.illiumSkillCheck(key.DEUS_KEY,key.FAST_CHARGE_KEY,key.LONGINUS_ZONE_KEY,key.RACE_OF_GOD_KEY,key.GRAM_HOLDER_KEY);
        skill.pSkill();
        if chkimg(lib.picPathHelper("GloryWing"),0,800,600,1366,800) then useSkill.GloryWingAttack(key.JAVELIN_KEY, VK_HOME, VK_F7);
        if chkimg(lib.picPathHelper("CrystalIgnition"),0,800,600,1366,800) then useSkill.crystalIgnition(key.IGNITION_KEY,key.CRYSTAL_KEY);
    next
    lib.urgentCheck();
    lib.checkGameMaster();
    
    result = 0
fend


//----------------------------------------
// Yellow Point Check : 黄昏発掘2
//----------------------------------------
function checkYellowPointExcavationArea2()

    ifb chkimg(lib.picPathHelper("yellowPoint"),0,0,0,84,150)
        KBD(VK_RIGHT,1,500)
        KBD(VK_RIGHT,2,2000)
    endif

    ifb !chkimg(lib.picPathHelper("yellowPoint"),0,0,0,120,150)
        KBD(VK_LEFT,1,500)
        KBD(VK_LEFT,2,2000)
    endif

    result = 0;

fend

//----------------------------------------
// Yellow Point Check : 魂の領土
//----------------------------------------
function checkYellowPointSoulOfTheTerritory()

    ifb chkimg(lib.picPathHelper("yellowPoint"),0,59,88,103,108)
        KBD(VK_DOWN,1,500)
        KBD(VK_DOWN,2,2000)
    endif

    ifb chkimg(lib.picPathHelper("yellowPoint"),0,0,0,60,122)
        KBD(VK_RIGHT,1,500)
        KBD(VK_RIGHT,2,1000)
    endif

    ifb !chkimg(lib.picPathHelper("yellowPoint"),0,0,0,97,122)
        KBD(VK_LEFT,1,500)
        KBD(VK_LEFT,2,1000)
    endif

    if chkimg(lib.picPathHelper("yellowPoint"),0,0,123,155,150) then upStageSoulOfTheTerritory();

    result = 0;

fend

//-----------------------------------------
// map     : 魂の領土
// comment : 最下段にいた場合上に戻る
//-----------------------------------------
function upStageSoulOfTheTerritory()

    
    //いったん右へ
    while true
        KBD(VK_RIGHT,1,500)
        for i = 1 to 5
            KBD(key.TELEPORT_KEY,0,500)
        next
        if !chkimg(lib.picPathHelper("yellowPoint"),0,0,0,133,150) then break;
    wend
    KBD(VK_RIGHT,2,500)
    

    //真ん中へ
    KBD(VK_LEFT,1,500)
    for i = 1 to 4
        KBD(key.TELEPORT_KEY,0,500)
    next    
    KBD(VK_LEFT,2,500)

    //上へテレポート
    KBD(VK_UP,1,500)
    for i = 1 to 3
        KBD(key.TELEPORT_KEY,0,500)
    next
    KBD(VK_UP,2,500)

    KBD(VK_LEFT,1,500)
    KBD(VK_LEFT,2,1500)

    result = 0;

fend

function upTeleport()

    KBD(VK_UP,1,300)
    KBD(key.TELEPORT_KEY,0,200);
    KBD(key.TELEPORT_KEY,0,100);
    KBD(key.TELEPORT_KEY,0,100);
    KBD(VK_UP,2,100);
    result = 0;
fend

function downTeleport()

    KBD(VK_DOWN,1,300);
    KBD(key.TELEPORT_KEY,0,200);
    KBD(key.TELEPORT_KEY,0,100);
    KBD(key.TELEPORT_KEY,0,100);
    KBD(VK_DOWN,2,100);
    result = 0;
fend


//----------------------------------------
// Yellow Point Check : 本性が現れる場所3
//----------------------------------------
function checkYellowPoint_WhereTheNatureAppears3()

    ifb chkimg(lib.picPathHelper("yellowPoint"),0,71,118,160,140)
        upTeleport();
    endif

    ifb chkimg(lib.picPathHelper("yellowPoint"),0,100,90,155,140)
        print 1
        KBD(VK_LEFT,1,500)
        while true
           if chkimg(lib.picPathHelper("yellowPoint"),0,0,0,85,140) then break;
        wend
        KBD(VK_LEFT,2,100)
    endif

    ifb chkimg(lib.picPathHelper("yellowPoint"),0,0,0,75,140)
        print 2
        KBD(VK_RIGHT,1,500)
        while true
           if !chkimg(lib.picPathHelper("yellowPoint"),0,0,0,75,140) then break;
        wend
        KBD(VK_RIGHT,2,100)
    endif

    result = 0;

fend


endclass