//=========================================//
// Map Name    : xxx                       //
//=========================================//
// Mob Name    : 
// Mob Level   : 
// Mob HP      : 
// Mob Exp     : 
//=========================================//
// comment     : None
// param       : None
// return      : None
// ========================================//
// Display Dpl : 800x600 or 1366x768
//=========================================//
// Copy Right (C) 2018 All Right Reserved. 
//   @author k.kawabata @kawaken1025
//     Create Date : 2018/08/15
//=========================================//

//MapleAPI : LogWriter.uws , MapleLibrary.uws , UseSkillFiveJob.uws
CALL ../MapleAPI/MapleAPI.uws;
//import Luminous skillKeySetting
CALL KeySetting.uws;
//Illium Utility Class
CALL IlliumUtil.uws;
//Move Window initSetting x = 1 , y = 1
lib.activeWindow();
//multiThread checkRedPoint and checkMineralization
thread lib.parallelProgram();

while true
    skillTime = gettime( 180 / 86400 );
    skill.illiumSupportSkill();
    lib.checkFamiliarPower();
    while true
        util.moveSoulOfCrystalAttack(VK_LEFT);
        checkYellowPoint2();
        util.moveSoulOfCrystalAttack(VK_RIGHT);
        checkYellowPoint2();
        if gettime() > skillTime then break;
        util.upTeleport();
        // ルーンが出現しているか確認します。
        // 出現していた場合は解除します
        ret = checkRuneStage();
        ifb ret <> 0
            lib.OpenRune();
        endif
    wend
    collect();
wend

//=========================================
// param   : None 
// comment : ルーンが出現しているか確認
//=========================================
function checkRuneStage()
    ret = 0;
    // 上段にあるか
    ifb chkimg(lib.picPathHelper("runePoint"),0,118,92,160,105)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを上段で発見しました。");
        moveStage(1);
        ret = 1;
    elseif chkimg(lib.picPathHelper("runePoint"),0,74,107,137,118)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを中段で発見しました。");
        moveStage(2);
        ret = 1;
    elseif chkimg(lib.picPathHelper("runePoint"),0,21,95,64,107)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを右建物で発見しました。");
        moveStage(3);
        ret = 1;
    elseif chkimg(lib.picPathHelper("runePoint"),0,21,120,155,130)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを最下段で発見しました。");
        moveStage(4);
        ret = 1;
    elseif chkimg(lib.picPathHelper("runePoint"),0,57,109,72,116)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを最下段で発見しました。");
        moveStage(5);
        ret = 1;
    endif
    
    result = ret;
fend

//=========================================
// param   : 1 or 2
// comment : ルーンが出現している段へ移動
//=========================================
function moveStage(num)
    // 中段だったらそのまま
    ifb num = 2
        exit;
    endif

    // いったん一番→へいく
    KBD(VK_RIGHT,1,500)
    while true
        if chkimg(lib.picPathHelper("yellowPoint"),0,141,114,156,130) then break;
        KBD(key.TELEPORT_KEY,0,100)
    wend
    KBD(VK_RIGHT,2,500)
    
    // 最下段にルーンがある場合は右へ行って終了
    ifb num = 4
        exit;
    // 中段へ
    // 上段にある場合は上へいくためローププコネクト
    elseif num = 1
        KBD(VK_B,0,1000)
        exit;
    elseif num = 5
        KBD(VK_LEFT,1,500)
        while true
            if chkimg(lib.picPathHelper("yellowPoint"),0,22,116,65,130) then break;
            KBD(key.TELEPORT_KEY,0,100)
        wend
        KBD(VK_LEFT,2,500);
        KBD(VK_B,0,1000);
        SLEEP(2);
        exit;
    endif

    result = 0;
fend

function checkYellowPoint2()

    ifb chkimg(lib.picPathHelper("yellowPoint"),0,25,98,77,130)
        KBD(VK_RIGHT,1,500)
        while true
            if !chkimg(lib.picPathHelper("yellowPoint"),0,25,98,77,130) then break;
        wend
        KBD(VK_RIGHT,2,100)
        util.upTeleport();
    endif

    ifb chkimg(lib.picPathHelper("yellowPoint"),0,100,98,157,130)
        KBD(VK_LEFT,1,500)
        while true
            if !chkimg(lib.picPathHelper("yellowPoint"),0,100,98,157,130) then break;
        wend
        KBD(VK_LEFT,2,100)
        util.upTeleport();
    endif

    result = 0;
fend

function checkYellowPoint()

    ifb chkimg("../picture/黄点.bmp",0,102,88,154,133)
        KBD(VK_LEFT,1,100)
        while TRUE
            if chkimg("../picture/黄点.bmp",0,86,88,104,133) then break
        wend
        KBD(VK_LEFT,2,100)
        util.upTeleport();
    endif

    ifb chkimg("../picture/黄点.bmp",0,0,0,96,130)
        KBD(VK_RIGHT,1,100)
        while true
            if !chkimg("../picture/黄点.bmp",0,0,0,95,130) then break
        wend
        KBD(VK_RIGHT,2,100)
        util.upTeleport();
    endif

    result = 0
fend

function collect()

    //異常用カウンター
    failedCounter = GETTIME( 10 / 86400 )

    KBD(VK_LEFT,1,100)
    while true
        if chkimg("../picture/黄点.bmp",0,0,0,56,130) then break
        KBD(VK_SPACE,0,100)
        if GETTIME() > failedCounter then break
    wend
    KBD(VK_LEFT,2,100)

    KBD(VK_B,0,500)
    SLEEP(1.5)

    KBD(VK_SHIFT,0,300)
    for x = 1 to 10
        KBD(VK_X,0,200)
        KBD(VK_A,0,10)
    next

    KBD(VK_LEFT,1,500)
    KBD(VK_LEFT,2,3000)

    KBD(VK_RIGHT,1,100)
    while true
        if !chkimg("../picture/黄点.bmp",0,0,0,130,130) then break
        KBD(VK_SPACE,0,100)
    wend

    KBD(VK_RIGHT,2,100)
    KBD(VK_b,0,700)
    SLEEP(3)

    KBD(VK_LEFT,1,800)
    while true
        if chkimg("../picture/黄点.bmp",0,0,0,113,130) then break
        KBD(VK_SPACE,0,100)
    wend
    KBD(VK_LEFT,2,500)
    KBD(VK_b,0,700)
    
    result = 0;
fend