CALL ../MapleAPI/MapleAPI.uws;
CALL ../lib/MapleLibrary.uws;
thread ï¿óÒèàóù() 
thread lib.parallelProgramExitMode();


skill = gettime( 1 / 86400 )
pet = gettime(600/86400)
sleep(1)


WHILE TRUE

ifb gettime() > pet
    kbd(vk_t,0,1000)
    pet = gettime(600/86400)
endif

ifb gettime() > skill
sleep(0.5)
for i = 1 to 3
    KBD(VK_G,0,200)
next
skill = gettime( 100 / 86400 )
endif


while true
    kbd(vk_left,1)
    KBD(VK_C,0,50)
    KBD(VK_C,0,50)
    KBD(VK_X,0,50)
    KBD(VK_X,0,50)
    KBD(VK_X,0,100)

    KBD(VK_SPACE,0,100)
    KBD(VK_SPACE,0,100)
    sleep(0.1)
    if chkimg(lib.picPathHelper("yellowPoint"),0,0,0,30,140)     then break;
wend
kbd(vk_left,2)
KBD(VK_H,0,500)



while true
    kbd(vk_right,1)
    KBD(VK_C,0,50)
    KBD(VK_C,0,50)
    KBD(VK_X,0,50)
    KBD(VK_X,0,50)
    KBD(VK_X,0,100)


    KBD(VK_SPACE,0,100)
    KBD(VK_SPACE,0,100)
    sleep(0.1)
    if chkimg(lib.picPathHelper("yellowPoint"),0,215,120,240,140)     then break;
wend
kbd(vk_right,2)
KBD(VK_H,0,500)


WEND






PROCEDURE ï¿óÒèàóù()
WHILE TRUE



KBD(VK_A,0,200)
KBD(VK_A,0,200)
sleep(2)

kbd(vk_space,0,1000)
kbd(vk_space,0,200)
kbd(vk_space,0,200)
sleep(2)

WEND
FEND


