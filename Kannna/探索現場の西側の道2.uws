//ACW(GETID("MapleStory","MapleStoryClass"),1,1)

CALL ../MapleAPI/MapleAPI.uws;
thread lib.parallelProgram();
//変数処理
PET = 0
KISHIN = 0

KBD(VK_G,0,1000)

WHILE TRUE //左端へ
	IFB PET > 5
		SLEEP(1.2)
		KBD(VK_T,0,1000)
		KBD(VK_J,0,800)
		PET = 0
	ENDIF

	KBD(VK_G,0,1000)
	SLEEP(1.2)
	KBD(VK_H,0,1500)

		FOR ATTACK = 1 TO 2
			checkRuneStage();
			IFB KISHIN > 2
				KBD(VK_H,0,1000)
			KISHIN = 0
			ENDIF

			IF CHKIMG("../picture/緑点.BMP",0,0,0,800,600) THEN EXITEXIT
			IF CHKIMG("../picture/エリボス.BMP",0,0,0,2000,2000) THEN SOUND("BEEP")

			黄点チェック()
			霊力回復()
			for i = 1 to 5
				KBD(VK_A,0,500)
			next
			upStage();

			黄点チェック()
			霊力回復()
			for i = 1 to 5
				KBD(VK_A,0,500)
			next
			downStage();

		NEXT
	PET = PET + 1
	KISHIN = KISHIN + 1
WEND


PROCEDURE 並列処理()
	WHILE TRUE
		IFB CHKIMG("../picture/石化.BMP",0,0,0,800,600)
			FOR X = 1 TO 20
				KBD(VK_LEFT,0,100)
				KBD(VK_RIGHT,0,100)
			NEXT
		ENDIF
	WEND
FEND

PROCEDURE 霊力回復()

	KBD(VK_U,0,800)
	//KBD(VK_DELETE,0,700)
	//KBD(VK_SHIFT,0,700)
	KBD(VK_9,0,1000)
	KBD(VK_HOME,0,1000)
FEND

PROCEDURE 黄点チェック()

	IFB CHKIMG("../picture/黄点.BMP",0,0,0,90,150)
	KBD(VK_RIGHT,1,500)
	KBD(VK_RIGHT,2,1000)
	ENDIF

	IFB CHKIMG("../picture/黄点.BMP",0,118,87,170,150)
	KBD(VK_LEFT,1,500)
	KBD(VK_LEFT,2,1000)
	ENDIF

FEND

function upStage()
	KBD(VK_UP,1,500);
	for i = 1 to 3
		KBD(VK_SPACE,0,200);
	next
	KBD(VK_UP,2,300)
	result = 0;
fend

function downStage()
	KBD(VK_DOWN,1,500);
	for i = 1 to 5
		KBD(VK_C,0,100);
	next
	KBD(VK_DOWN,2,300)
	result = 0;
fend

//=========================================
// param   : None 
// comment : ルーンが出現しているか確認
//=========================================
function checkRuneStage()

    // 上段にあるか
    ifb chkimg(lib.picPathHelper("runePoint"),0,0,0,163,102)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを上段で発見しました。");
        moveStage(1);
        result = 1;
    elseif chkimg(lib.picPathHelper("runePoint"),0,0,103,163,150)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを下段で発見しました。");
        moveStage(2);
        result = 1;
    endif
    
    result = 0;
fend


//=========================================
// param   : 1 or 2
// comment : ルーンが出現している段へ移動
//=========================================
function moveStage(num)
    // いったん一番→へいく
    KBD(VK_RIGHT,1,500)
    while true
        if chkimg(lib.picPathHelper("yellowPoint"),0,136,87,180,150) then break;
        KBD(VK_SPACE,0,100)
    wend
    KBD(VK_RIGHT,2,500)
    
    // 下段にルーンがある場合は右へ行って終了
    ifb num = 2
        result = 0;
    
    // 上段にある場合は真ん中から行って↑テレポ
    else
    	KBD(VK_LEFT,1,500)
    	while true
	        if chkimg(lib.picPathHelper("yellowPoint"),0,64,87,110,150) then break;
   	    wend
	    KBD(VK_LEFT,2,500)
        KBD(VK_UP,1,500)
        for i = 1 to 5
            KBD(VK_SPACE,0,100)
        next
        KBD(VK_UP,2,100)
        result = 0;
    endif
    lib.OpenRune();
    
    result = 0;
fend