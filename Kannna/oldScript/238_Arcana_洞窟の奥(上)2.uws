//===========================================//
// Map Name    : 洞窟の奥(上)2
//===========================================//

//===========================================//
// comment     : 
// param       : None
// return      : None
// ==========================================//
// Display Dpl : 1024x768
// ==========================================//


CALL ../MapleAPI/MapleAPI.uws;
CALL ../lib/MapleLibrary.uws;
CALL KeySetting.uws;
CALL KannnaUtil.uws;

print "現在のキャラクターレベル=" + lib.getCharacterLevel()
lib.ExpandQuickSlot()

thread 並列Ⅰ
thread 並列Ⅱ
thread lib.parallelProgram();
//---------------------------------------------------------------------------------------------------------------------

sleep(1)

KBD(key.HAKU_KEY,0,200)
KBD(key.HAKU_KEY,0,210)
KBD(key.HAKU_KEY,0,210)
sleep(1)
//KBD(VK_OEM_PERIOD,0,200)
//KBD(VK_OEM_PERIOD,0,220)
//KBD(VK_OEM_PERIOD,0,200)
sleep(1)
skillTime      = gettime( 180 / 86400 )
回収行動        = gettime( 70 / 86400 ) //回収処理
ファミリアCHECK = gettime( 500 / 86400 ) //ファミリア気力回復チェック
親分            = gettime( 30 / 86400 ) 
yakisobaTime   = gettime( 300 / 86400 );
oyabunTime5th  = GETTIME( 1 / 86400);

chkimg("../picture/アルカナ.bmp",0,0,0,100,100) //アルカナミニマップ座標記憶
Xa = g_img_x
Ya = g_img_y

lib.checkFamiliarPower();

WHILE TRUE
//------------------------------------------------------------------------------------------------------------------------
    //▼▼エリボ処理（ｃｈ変更）▼▼
    ifb chkimg("../picture/残り時間.bmp",0,0,0,700,200) 
        count = 0
        sleep(5)

        while true
            sleep(0.1)

            kbd(vk_F7,0,500)
            kbd(vk_F7,0,200)

            // ch = 1//RANDOM(1)
            // for i = 1 to ch
            //     KBD(VK_RIGHT,0,150)
            // next
            KBD(VK_RIGHT,0,150)
            kbd(vk_enter,0,500)
            sleep(1)
            BTN(left,0,300,100,100)
            while !chkimg("../picture/黄点.bmp",0,0,40,250,150)
                sleep(0.4)
            wend
        BTN(left,0,300,100,100)

        for x = 1 to 10
            if chkimg("../picture/redpoint.bmp",0,0,45,250,170) or _
               chkimg("../picture/guild_member.bmp",0,0,45,250,170) or _
               chkimg("../picture/friend_point.bmp",0,0,45,250,170) or _
               chkimg("../picture/残り時間.bmp",0,0,0,700,200) then count = count + 1
            sleep(0.2)
        next

        ifb count >= 1
            count = 0
            ifb chkimg("../picture/確認.bmp",0,200,200,800,650)
            btn(left,0,g_img_x,g_img_y,500)
            btn(left,0,g_img_x,g_img_y,500)
        endif

    else
        break
    endif

wend

endif


//------------------------------------------------------------------------------------------------------------------------

//▼▼アイテム収集▼▼

IFB GETTIME() > 回収行動

    KBD(key.JOREIFU_KEY,0,200)
    KBD(key.JOREIFU_KEY,0,180)
    KBD(key.JOREIFU_KEY,0,180)

    while !chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+165,Ya+102)
		kbd(vk_left,1)
		KBD(key.SHISEN_KEY,0,150)
		KBD(key.SHISEN_KEY,0,150)
		KBD(key.SHISEN_KEY,0,150)
		KBD(key.TELEPORT_KEY,0,50)
		KBD(key.TELEPORT_KEY,0,100)
		KBD(key.TELEPORT_KEY,0,50)
		sleep(0.1)

	kishin()
    wend
    kbd(vk_left,2)

    while !chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+150,Ya+102)
		kbd(vk_left,1)
		sleep(0.1)
	kishin()
    wend
    kbd(vk_left,2)

    while !chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+38,Ya+102)
		kbd(vk_left,1)
		KBD(key.SHISEN_KEY,0,150)
		KBD(key.SHISEN_KEY,0,150)
		KBD(key.SHISEN_KEY,0,150)
		KBD(key.TELEPORT_KEY,0,50)
		KBD(key.TELEPORT_KEY,0,100)
		KBD(key.TELEPORT_KEY,0,50)
		sleep(0.1)

        kishin()
        ifb chkimg("../picture/黄点.bmp",0,Xa-10,Ya+79,Xa+240,Ya+102)
            kbd(vk_left,2)
            KBD(key.JOREIFU_KEY,0,200)
            KBD(key.JOREIFU_KEY,0,180)
            KBD(key.JOREIFU_KEY,0,180)

            FOR TT = 1 TO 3
                KBD(VK_UP,1)
                KBD(key.TELEPORT_KEY,0,100)
                KBD(key.TELEPORT_KEY,0,100)
                SLEEP(0.1)
                IF !CHKIMG("../PICTURE/黄点.BMP",0,Xa-10,Ya+37,Xa+240,Ya+79) THEN BREAK
            NEXT
            KBD(VK_UP,2,50)
        ENDIF

        // ErrCheck

// AutoLogin();
    wend
    kbd(vk_left,2)

    while chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+140,Ya+77)
		kbd(vk_RIGHT,1)
		kbd(key.CONTINUOUS_KEY,1,100)
		SLEEP(0.1)
		
		// AutoLogin();
    WEND
    kbd(vk_RIGHT,2)

    while !chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+52,Ya+102)
		kbd(vk_LEFT,1)
		kbd(key.CONTINUOUS_KEY,1,100)
		
		// AutoLogin();
    WEND
    kbd(vk_LEFT,2)
    kbd(key.CONTINUOUS_KEY,2)

    KBD(key.JOREIFU_KEY,0,200)
    KBD(key.JOREIFU_KEY,0,180)
    KBD(key.JOREIFU_KEY,0,180)

    KBD(key.SHISEN_KEY,0,200)
    KBD(key.SHISEN_KEY,0,180)
    KBD(key.SHISEN_KEY,0,180)

    while chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+90,Ya+102)
		kbd(vk_RIGHT,1)
		KBD(key.SHISEN_KEY,0,150)
		KBD(key.SHISEN_KEY,0,150)
		KBD(key.SHISEN_KEY,0,150)
		KBD(key.TELEPORT_KEY,0,50)
		KBD(key.TELEPORT_KEY,0,100)
		KBD(key.TELEPORT_KEY,0,50)
		sleep(0.1)
        kishin()
    wend
    kbd(vk_RIGHT,2)

    while chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+106,Ya+102)
		kbd(vk_RIGHT,1)
		SLEEP(0.04)
	// AutoLogin();
    wend
    kbd(vk_RIGHT,2)

    while chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+190,Ya+102)
		kbd(vk_RIGHT,1)
		KBD(key.SHISEN_KEY,0,150)
		KBD(key.SHISEN_KEY,0,150)
		KBD(key.SHISEN_KEY,0,150)
		KBD(key.TELEPORT_KEY,0,50)
		KBD(key.TELEPORT_KEY,0,100)
		KBD(key.TELEPORT_KEY,0,50)
		sleep(0.1)

	    kishin()
    wend
    kbd(vk_RIGHT,2)

    回収行動 = gettime( 70 / 86400 )
    lib.useMaprage()
ENDIF

//------------------------------------------------------------------------------------------------------------------------

//▼▼ファミリア気力回復チェック▼▼
ifb gettime() > ファミリアCHECK
    ファミリアCHECK = gettime( 500 / 86400 )
    lib.checkFamiliarPower();
endif
//if chkimg("../picture/ファミリアホーム.bmp",0,0,0,1000,500) then KBD(VK_F6,CLICK,500)

//------------------------------------------------------------------------------------------------------------------------
//▼▼バフスキル関係使用▼▼
KannnaSkillCheck();
skill.pSkill();
lib.UrgentCheck();
ifb GETTIME() > skillTime
    KBD(key.HAKU_KEY,0,210);
    KBD(VK_G,0,800);
    sleep(1.5);
    skillTime = GETTIME( 180 / 86400 );
endif

ifb GETTIME() > yakisobaTime
    KBD(VK_F2,0,500);
    sleep(0.3);
    ifb chkimg("../picture/確認.bmp",0,200,200,800,650)
        btn(left,0,g_img_x,g_img_y,500)
        btn(left,0,g_img_x+30,g_img_y,500)
    endif
    yakisobaTime = GETTIME( 300 / 86400 );
endif

//------------------------------------------------------------------------------------------------------------------------
        //▼▼GM対策▼▼
        
        ifb chkimg("../picture/GMResponse/ご返答.bmp",1,5,600,420,780) and _
            chkimg("../picture/redpoint.bmp",0,10,85,250,160) and _
            !chkimg("../picture/heart.bmp",0,5,600,400,780)
            print "Detected GameMaster"
            KBD(VK_SCROLL,CLICK,100)
            lib.checkGameMaster();
            BTN(LEFT,CLICK,740,340,500);
            //exitexit
        endif
//------------------------------------------------------------------------------------------------------------------------

//▼▼狩りメイン部分▼▼
        sleep(0.3)
        while chkimg("../picture/黄点.bmp",0,Xa+148,Ya+55,Xa+233,Ya+66)  
            kbd(vk_left,1)
            kbd(vk_down,1)
            kbd(vk_c,0,50)
        wend
        kbd(vk_down,2)
        kbd(vk_left,2)
        kbd(key.SHISEN_KEY,0,250)
        kbd(key.SHISEN_KEY,0,100)
        kishin()
        
        IFB chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+170,Ya+102)
            while chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+55,Ya+102)
                kbd(vk_right,1)
                kbd(key.TELEPORT_KEY,0,50)
            wend
            kbd(vk_right,2)
        endif

        //ロープに掴まった場合左ジャンプ
        while chkimg("../picture/黄点.bmp",0,Xa+191,Ya+66,Xa+201,Ya+74)
            kbd(vk_left,1)
            kbd(vk_c,0,50)
        wend

        //右側に寄り過ぎたとき左にテレポ
        while chkimg("../picture/黄点.bmp",0,Xa+208,Ya+50,Xa+228,Ya+90)
            ifb chkimg("../picture/黄点.bmp",0,Xa+203,Ya+80,Xa+228,Ya+90)
                kbd(vk_left,1)
                kbd(key.TELEPORT_KEY,0,50)
            endif
            sleep(0.01)
        wend
        kbd(vk_left,2,500)


kbd(key.SHISEN_KEY,0,250)
kbd(key.SHISEN_KEY,0,100)
kbd(key.SHISEN_KEY,0,100)

tengucount = 0
ErrTime = GETTIME( 5 / 86400 )
while true
    //ifb chkimg("../picture/天狗.bmp",0,847,714,1025,792)
    ifb chkimg("../picture/天狗.bmp")
        //while chkimg("../picture/天狗.bmp",0,847,714,1025,792)
        while chkimg("../picture/天狗.bmp")
            KBD(VK_A,0,200)
            if GETTIME() > ErrTime then break 2
        wend
        tengucount = tengucount + 1
        sleep(0.05)
    endif
    // AutoLogin();
    if tengucount >= 1 then break
    sleep(0.1)
wend


SLEEP(0.5)

FOR TT = 1 TO 4
	KBD(VK_DOWN,1)
	KBD(VK_C,0,100)
	SLEEP(0.2)
	IF CHKIMG("../PICTURE/黄点.BMP",0,Xa-10,Ya+37,Xa+50,Ya+102) THEN BREAK
	KBD(VK_C,0)
	SLEEP(0.2)
	IF CHKIMG("../PICTURE/黄点.BMP",0,Xa-10,Ya+37,Xa+50,Ya+102) THEN BREAK
NEXT
KBD(VK_DOWN,2)

// AutoLogin();

//▼▼ルーン解除A▼▼
checkRuneStageA();

WHILE CHKIMG("../PICTURE/黄点.BMP",0,Xa-10,Ya+37,Xa+50,Ya+75)

//KBD(VK_RIGHT,1)
KBD(VK_DOWN,1)
KBD(VK_C,0,50)
KBD(VK_C,0,120)


    IF !CHKIMG("../PICTURE/黄点.BMP",0,Xa-10,Ya+37,Xa+50,Ya+80) THEN BREAK

    //KBD(key.SHISEN_KEY,0,100)
    //KBD(key.SHISEN_KEY,0,100)
    
    SLEEP(0.1)
    IF !CHKIMG("../PICTURE/黄点.BMP",0,Xa-10,Ya+37,Xa+50,Ya+80) THEN BREAK
    KBD(VK_C,0)
    SLEEP(0.2)
WEND

KBD(VK_DOWN,2)
//KBD(VK_RIGHT,2)

SLEEP(0.7)


//▼▼ルーン解除B▼▼
checkRuneStageB();

WEND


//=========================================
// param   : None 
// comment : 自動ログイン
//=========================================
function AutoLogin()

ifb chkimg("../picture/ログイン画面.bmp",0,0,0,800,600)

KBD(VK_LEFT,2,100)
KBD(VK_RIGHT,2,100)
KBD(VK_up,2,100)
KBD(VK_down,2,100)
KBD(key.CONTINUOUS_KEY,2,100)

sleep(10)

KBD(VK_esc,0,1000)
KBD(VK_esc,0,1000)

chkimg("../picture/ログイン画面.bmp",0,0,0,800,600)
sleep(1)
Vx = g_img_x
Vy = g_img_y

BTN(LEFT,0,Vx+125,Vy-45,500)
BTN(LEFT,0,Vx+125,Vy-45,200)
BTN(LEFT,0,Vx+125,Vy-45,200)

KBD(VK_BACK,CLICK,500)
KBD(VK_BACK,CLICK,50)
KBD(VK_BACK,CLICK,47)
KBD(VK_BACK,CLICK,62)
KBD(VK_BACK,CLICK,50)
KBD(VK_BACK,CLICK,47)
KBD(VK_BACK,CLICK,62)
KBD(VK_BACK,CLICK,50)
KBD(VK_BACK,CLICK,47)
KBD(VK_BACK,CLICK,62)


//▼▼1次パスをクリップボードに送る▼▼
SendStr(0,"alzn@1234") // ←123456の部分に1次パスワードを記入

//▼▼1次パスワードを貼り付け▼▼
// Ctrl+Vで貼り付けます
KBD(VK_CTRL,1,500)
KBD(key.TELEPORT_KEY,0,500)
KBD(VK_CTRL,2,500)

WHILE !CHKIMG("../picture/2次パス1.BMP",0,0,0,800,600)
sleep(1)
KBD(VK_ENTER,0,500)
WEND


//▼▼2次パスワード入力▼▼
MMV(100,100,1000)
SLEEP(0.5)
CHKIMG("../picture/2次パス0.BMP",0,0,0,800,600) // ←クリックする数字の画像を指定
BTN(LEFT,0,G_IMG_X,G_IMG_Y,500)
sleep(0.1)
BTN(LEFT,0,G_IMG_X,G_IMG_Y,500)
sleep(0.1)
BTN(LEFT,0,G_IMG_X,G_IMG_Y,500)
sleep(0.1)
BTN(LEFT,0,G_IMG_X,G_IMG_Y,500)
sleep(0.1)
BTN(LEFT,0,G_IMG_X,G_IMG_Y,500)
sleep(0.1)
BTN(LEFT,0,G_IMG_X,G_IMG_Y,500)
sleep(0.1)


sleep(1)

BTN(LEFT,0,Vx,Vy-20,500)
BTN(LEFT,0,Vx,Vy-20,100)
BTN(LEFT,0,Vx,Vy-20,2000)

        while !chkimg("../picture/黄点.bmp",0,0,40,250,150)
        sleep(0.4)
        wend

KBD(VK_esc,0,1000)
BTN(left,0,300,100,500)
KBD(VK_esc,0,1000)
BTN(left,0,300,100,500)
KBD(VK_esc,0,1000)
BTN(left,0,300,100,500)

Count = 0
while true

    kbd(vk_F7,0,500)
    kbd(vk_F7,0,200)

    ch = RANDOM(16)

    for i = 0 to ch
    KBD(VK_RIGHT,0,150)
    next

    kbd(vk_enter,0,500)
    sleep(1)
    BTN(left,0,300,100,100)

        while !chkimg("../picture/黄点.bmp",0,0,40,250,150)
        sleep(0.4)
        wend

    BTN(left,0,300,100,100)

    for x = 1 to 10
    if chkimg("../picture/redpoint.bmp",0,0,45,250,150) or chkimg("../picture/guild_member.bmp",0,0,45,250,150) or chkimg("../picture/残り時間.bmp",0,0,0,700,200) then count = count + 1
    sleep(0.2)
    next

    ifb count >= 1
    count = 0
    ifb chkimg("../picture/確認.bmp",0,200,200,800,650)
    btn(left,0,g_img_x,g_img_y,500)
    btn(left,0,g_img_x,g_img_y,500)
    endif

    else

    break

    endif

wend

kbd(vk_f8,0,500)
kbd(vk_f8,0,500)

endif

    result = 0;

fend

//------------------------------------------------------------------------------------------------------------------------


//=========================================
// param   : None 
// comment : ルーンが出現しているか確認
//=========================================
function checkRuneStageA()

    chkimg("../picture/アルカナ.bmp",0,0,0,100,100) //アルカナミニマップ座標記憶
    Xa = g_img_x
    Ya = g_img_y

    ifb chkimg(lib.picPathHelper("runePoint"),0,5,Ya+37,Xa+52,Ya+68)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを左上1で発見しました。");

        moveStage(1);
        result = constant.DISCOVERY_RUNE;
    elseif chkimg(lib.picPathHelper("runePoint"),0,Xa+35,Ya+75,Xa+119,Ya+102)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを左下で発見しました。");

        moveStage(2);
        result = constant.DISCOVERY_RUNE;
    endif

fend


//=========================================
// param   : None 
// comment : ルーンが出現しているか確認
//=========================================
function checkRuneStageB()

    chkimg("../picture/アルカナ.bmp",0,0,0,100,100) //アルカナミニマップ座標記憶
    Xa = g_img_x
    Ya = g_img_y

    ifb chkimg(lib.picPathHelper("runePoint"),0,Xa+52,Ya+37,Xa+69,Ya+67)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを左上2で発見しました。");

// AutoLogin();
        moveStage(3);
        result = constant.DISCOVERY_RUNE;
    elseif chkimg(lib.picPathHelper("runePoint"),0,Xa+69,Ya+37,Xa+139,Ya+67)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを上中で発見しました。");

// AutoLogin();
        moveStage(4);
        result = constant.DISCOVERY_RUNE;
    elseif chkimg(lib.picPathHelper("runePoint"),0,Xa+139,Ya+37,Xa+240,Ya+67)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを右上で発見しました。");

// AutoLogin();
        moveStage(5);
        result = constant.DISCOVERY_RUNE;
    elseif chkimg(lib.picPathHelper("runePoint"),0,Xa+119,Ya+72,Xa+235,Ya+102)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを右下で発見しました。");

// AutoLogin();
        moveStage(6);
        result = constant.DISCOVERY_RUNE;
    endif

fend


//=========================================
// param   : 1 or 2 or 3 or 4 or 5 or 6
// comment : ルーンが出現している段へ移動
//=========================================
function moveStage(num)

chkimg("../picture/アルカナ.bmp",0,0,0,100,100) //アルカナミニマップ座標記憶
Xa = g_img_x
Ya = g_img_y


    // 左上1にルーンがある場合
    ifb num = 1

        result = 0;

    // 左下にある場合
    elseif num = 2
        kbd(vk_LEFT,2,100)
        while chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+140,Ya+77)
            kbd(vk_RIGHT,1)
            kbd(key.CONTINUOUS_KEY,1,100)
            SLEEP(0.1)
            // AutoLogin();
        WEND
        kbd(vk_RIGHT,2)
        kbd(key.CONTINUOUS_KEY,2,100)
        result = 0;

    // 左下にある場合
    elseif num = 3
        KBD(key.JOREIFU_KEY,0,200)
        KBD(key.JOREIFU_KEY,0,180)
        KBD(key.JOREIFU_KEY,0,180)
        while !chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+160,Ya+102)
            kbd(vk_left,1)
            KBD(key.SHISEN_KEY,0,200)
            KBD(key.SHISEN_KEY,0,180)
            KBD(key.SHISEN_KEY,0,180)
            KBD(key.TELEPORT_KEY,0,50)
            KBD(key.TELEPORT_KEY,0,100)
            sleep(0.1)

            kishin();
        wend
    kbd(vk_left,2)

    while !chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+155,Ya+102)
        kbd(vk_left,1)
        sleep(0.1)
        // AutoLogin();
    wend
    kbd(vk_left,2)
    while !chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+100,Ya+102)
        kbd(vk_left,1)
        KBD(key.SHISEN_KEY,0,200)
        KBD(key.SHISEN_KEY,0,180)
        KBD(key.SHISEN_KEY,0,180)
        KBD(key.TELEPORT_KEY,0,50)
        KBD(key.TELEPORT_KEY,0,100)
        sleep(0.1)
        kishin();
    wend
    kbd(vk_left,2)

    elseif num = 4

        KBD(key.JOREIFU_KEY,0,200)
        KBD(key.JOREIFU_KEY,0,180)
        KBD(key.JOREIFU_KEY,0,180)

        while !chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+165,Ya+102)
            kbd(vk_left,1)
            KBD(key.SHISEN_KEY,0,200)
            KBD(key.SHISEN_KEY,0,180)
            KBD(key.SHISEN_KEY,0,180)
            KBD(key.TELEPORT_KEY,0,50)
            KBD(key.TELEPORT_KEY,0,100)
            sleep(0.1)

            kishin();
        wend
        kbd(vk_left,2)

        while !chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+150,Ya+102)
            kbd(vk_left,1)
            sleep(0.1)

            kishin();
        wend
        kbd(vk_left,2)

        while !chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+115,Ya+102)
            kbd(vk_left,1)
            KBD(key.SHISEN_KEY,0,200)
            KBD(key.SHISEN_KEY,0,180)
            KBD(key.SHISEN_KEY,0,180)
            KBD(key.TELEPORT_KEY,0,50)
            KBD(key.TELEPORT_KEY,0,100)
            sleep(0.1)

            kishin();
        wend
        kbd(vk_left,2)

    elseif num = 5

        KBD(key.JOREIFU_KEY,0,200)
        KBD(key.JOREIFU_KEY,0,180)
        KBD(key.JOREIFU_KEY,0,180)

    elseif num = 6

    while !chkimg("../picture/黄点.bmp",0,Xa-10,Ya+37,Xa+190,Ya+102)
        kbd(vk_left,1)
        KBD(key.SHISEN_KEY,0,200)
        KBD(key.SHISEN_KEY,0,180)
        KBD(key.SHISEN_KEY,0,180)
        KBD(key.TELEPORT_KEY,0,50)
        KBD(key.TELEPORT_KEY,0,100)
        sleep(0.2)
        kishin();
    wend
    kbd(vk_left,2)    

    FOR TT = 1 TO 3
        KBD(VK_DOWN,1)
        KBD(VK_C,0,100)
        KBD(VK_C,0,100)
        SLEEP(0.1)
        IF !CHKIMG("../PICTURE/黄点.BMP",0,Xa-10,Ya+37,Xa+50,Ya+72) THEN BREAK
        KBD(VK_C,0,100)
        KBD(VK_C,0,100)
        SLEEP(0.1)
        IF !CHKIMG("../PICTURE/黄点.BMP",0,Xa-10,Ya+37,Xa+50,Ya+72) THEN BREAK
    NEXT
    KBD(VK_DOWN,2,50)
    sleep(0.5)
    endif

    lib.OpenRune();
    
    result = 0;
fend




procedure 並列Ⅰ

    財物 = gettime( 7200 / 86400 ) 
    餌 = gettime( 600 / 86400 ) 

    while true

    IFB CHKIMG("../picture/石化.BMP",0,0,0,1000,800) OR CHKIMG("../picture/石化2.BMP",0,0,0,1000,800)
        FOR X = 1 TO 20 
            KBD(VK_LEFT,0,100)
            KBD(VK_RIGHT,0,100)
        NEXT
    ENDIF

    sleep(0.5)

    //▼▼財物チェック▼▼

    ifb gettime() > 財物
        sleep(0.5)
        KBD(VK_F12,0,1000)
        KBD(VK_F12,0,100)
        KBD(VK_F12,0,100)
        KBD(VK_F12,0,100)
        sleep(0.5)
        財物 = gettime( 7230 / 86400 ) 
    endif

    //▼▼PET用餌▼▼
    ifb gettime() > 餌
        sleep(0.5)
        KBD(VK_T,0,500)
        KBD(VK_T,0,500)
        KBD(VK_T,0,500)
        KBD(VK_T,0,50)
        sleep(0.5)
        餌 = gettime( 600 / 86400 ) 
    endif

    ifb chkimg("../picture/会話.bmp",0,200,250,750,550) 
        btn(left,0,g_img_x,g_img_y,500)
        btn(left,0,g_img_x,g_img_y,100)
        mmv(300,100,100)
    endif

    sleep(0.5)

    ifb chkimg("../picture/確認.bmp",0,300,250,750,550) 
        btn(left,0,g_img_x,g_img_y,500)
        btn(left,0,g_img_x,g_img_y,100)
        mmv(300,100,100)
    endif

    sleep(0.5)

    ifb chkimg("../picture/緑点.bmp",0,0,40,170,160) 
        sound("beep")
        exitexit
    endif

    sleep(0.5)

    ifb chkimg("../picture/redpoint.bmp",0,0,35,250,170) //or chkimg("../picture/bluepoint.bmp",0,0,35,220,170)
        KBD(VK_SCROLL,CLICK,100)
        sound("BEEP")
    endif

    wend
fend

procedure 並列Ⅱ
    DIM list[] = 5,7,9,11
    while true
        For KK = 1 TO list[KK]
            sleep(3)
        NEXT
        if !chkimg("../picture/残り時間.bmp",0,100,0,700,200) and !chkimg("../picture/redpoint.bmp",0,0,0,250,200) and !chkimg("../picture/runePoint.bmp",0,0,0,250,200) and  chkimg("../picture/アルカナ.bmp",0,0,0,100,100) then kbd(key.SHISEN_KEY,0,500)
    wend
fend


function kishin()
    ifb chkimg(lib.picPathHelper("kishin"),0,0,0,1366,800) 
        while true
            KBD(VK_H,0,500);
            KBD(VK_H,0,500);
            if !chkimg(lib.picPathHelper("kishin"),0,0,0,1366,800) then break;
        wend
    endif
    result = 0;
fend


    public mOyabunTime = GETTIME( 30 / 86400 );
    // 加護座標情報
    public mBx1 = 0;
    public mBy1 = 0;
    public mBx2 = 0;
    public mBy2 = 0;
    // 雪女座標情報
    public mYOx1 = 0;
    public mYOy1 = 0;
    public mYOx2 = 0;
    public mYOy2 = 0;
    // 霊石召喚座標情報
    public mLSx1 = 0;
    public mLSy1 = 0;
    public mLSx2 = 0;
    public mLSy2 = 0;
    // 白狐座標情報
    public mWFx1 = 0;
    public mWFy1 = 0;
    public mWFx2 = 0;
    public mWFy2 = 0;
    // スパイダーインミラー座標情報
    public mSiMx1 = 0;
    public mSiMy1 = 0;
    public mSiMx2 = 0;
    public mSiMy2 = 0;
    // 暁の陣
    public mSaLx1 = 0;
    public mSaLy1 = 0;
    public mSaLx2 = 0;
    public mSaLy2 = 0;
    // 5th親分再使用タイム
    public oyabunTime5th;

    function KannnaSkillCheck()
        x1 = 0;
        y1 = 0;
        x2 = 1366;
        y2 = 800;

        KBD(VK_U,0,300);

        ifb mSaLx1 = 0
            ifb chkimg("../picture/SengokuAlliance.bmp",0,x1,y1,x2,y2)
                KBD(key.SENGOKU_ALLIANCE,0,300);
                lib.SetCoordinate(mSaLx1, mSaLy1, mSaLx2, mSaLy2);
            endif
        else
            ifb chkimg("../picture/SengokuAlliance.bmp",0,mSaLx1, mSaLy1, mSaLx2, mSaLy2)
                KBD(key.SENGOKU_ALLIANCE,0,300);
            endif
        endif


        ifb mBx1 = 0
            ifb chkimg("../picture/BlessingsOfPrincess.bmp",0,x1,y1,x2,y2)
                KBD(key.BLESSING,0,100);
                sleep(0.2);
                lib.SetCoordinate(mBx1, mBy1, mBx2, mBy2);
            endif
        else
            ifb chkimg("../picture/BlessingsOfPrincess.bmp",0,mBx1,mBy1,mBx2,mBy2)
                KBD(key.BLESSING,0,100);
                sleep(0.2);
            endif            
        endif

        ifb mYOx1 = 0
            ifb chkimg("../picture/雪女.bmp",0,x1,y1,x2,y2)
                KBD(VK_F5,0,100);
                sleep(0.2);
                lib.SetCoordinate(mYOx1, mYOy1, mYOx2, mYOy2);
            endif
        else
            ifb chkimg("../picture/雪女.bmp",0,mYOx1, mYOy1, mYOx2, mYOy2)
                KBD(VK_F5,0,100);
                sleep(0.3);
            endif
        endif

        ifb mLSx1 = 0
            ifb chkimg("../picture/LingStone.bmp",0,x1,y1,x2,y2)
                KBD(VK_HOME,0,100);
                sleep(0.3);
                lib.SetCoordinate(mLSx1, mLSy1, mLSx2, mLSy2);
            endif
        else
            ifb chkimg("../picture/LingStone.bmp",0,mLSx1, mLSy1, mLSx2, mLSy2)
                KBD(VK_HOME,0,100);
                sleep(0.3);
            endif            
        endif

        ifb mWFx1 = 0
            ifb chkimg("../picture/白狐.bmp",0,x1,y1,x2,y2)
                KBD(VK_CTRL,0,100);
                lib.SetCoordinate(mWFx1, mWFy1, mWFx2, mWFy2);
                exit;
            elseif chkimg("../picture/WhiteFox.bmp",0,x1,y1,x2,y2)
                KBD(VK_CTRL,0,100);
                lib.SetCoordinate(mWFx1, mWFy1, mWFx2, mWFy2);
                exit;
            endif
        else
            ifb chkimg("../picture/白狐.bmp",0,mWFx1, mWFy1, mWFx2, mWFy2)
                KBD(VK_CTRL,0,100);
                exit;
            elseif chkimg("../picture/WhiteFox.bmp",0,mWFx1, mWFy1, mWFx2, mWFy2)
                KBD(VK_CTRL,0,100);
                exit;
            endif
        endif

        ifb mOyabunTime < GETTIME()
            KBD(VK_W,0,800);
            mOyabunTime = GETTIME( 30 / 86400 );
        endif

        ifb mSiMx1 = 0
            ifb chkimg(lib.picPathHelper("SpiderInMirror"),0,x1,y1,x2,y2)
                KBD(VK_END,0,500);
                lib.SetCoordinate(mSiMx1, mSiMy1, mSiMx2, mSiMy2);
            endif
        else
            ifb chkimg(lib.picPathHelper("SpiderInMirror"),0,mSiMx1, mSiMy1, mSiMx2, mSiMy2)
                KBD(VK_END,0,500);
            endif            
        endif

        ifb chkimg("../picture/暁5thMH.bmp")
            KBD(VK_R,0,500);
        endif

        ifb chkimg("../picture/5th_oyabun.bmp")
            ifb oyabunTime5th < GETTIME();
                for i = 1 to 2
                    KBD(VK_F9,0,125);
                next
                oyabunTime5th = GETTIME( 60 / 86400 )
            endif
        endif

        ifb chkimg(lib.picPathHelper("kishin"),0,0,0,1366,800) 
            while true
                KBD(VK_H,0,500);
                KBD(VK_H,0,500);
                if !chkimg(lib.picPathHelper("kishin"),0,0,0,1366,800) then break;
            wend
        endif

        // 5th:スパイダーインミラー
        ifb mSiMx1 = 0
            ifb chkimg(lib.picPathHelper("SpiderInMirror"),0,x1,y1,x2,y2) or chkimg(lib.picPathHelper("SpiderInMirror2"),0,x1,y1,x2,y2)
                KBD(VK_DELETE,0,500);
                lib.SetCoordinate(mSiMx1, mSiMy1, mSiMx2, mSiMy2);
            endif
        else
            ifb chkimg(lib.picPathHelper("SpiderInMirror"),0,mSiMx1, mSiMy1, mSiMx2, mSiMy2) or chkimg(lib.picPathHelper("SpiderInMirror2"),0,mSiMx1, mSiMy1, mSiMx2, mSiMy2)
                KBD(VK_DELETE,0,500);
            endif            
        endif

        result = 0;
    fend