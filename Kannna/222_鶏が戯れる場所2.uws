
//============================================//
// Map Name    : レヘルン　鶏が戯れる場所2
//============================================//
// Job Name    : カンナ
//============================================//
// Mob Name    : 狂気の舞踏会の住民
// Mob Level   : 224
// Mob HP      : 206,683,440
// Mob Exp     : 335,675
// ===========================================//
// Display Dpl : 1024x768
//============================================//
// Copy Right (C) 2020 All Right Reserved. 
//   @Author : hojoman @hojomandayo
//    @Special Thanks : k.kawabata @kawaken1025
//     Create Date : 2020/07/23
//============================================//

SLEEP(0.5)

THREAD 並列1 //並列
THREAD 並列2 //並列

//ACW(GETID("MapleStory","MapleStoryClass"),1,1)
lib.activeWindow();
famCheckTime = GETTIME( 180 /86400);
//=========================================
// init
//=========================================
// MapleAPI : LogWriter.uws , MapleLibrary.uws , UseSkillFiveJob.uws
CALL ../MapleAPI/MapleAPI.uws;
// Util - sugarTime exec
CALL ../Util/MapleUtil.uws;
CALL KannnaUtil.uws;
// multiThread checkRedPoint and checkMineralization
//thread manager.CheckEncountStatus("../MapleManagement/status/Kannna/status");
// MessageWindow init
//LOGPRINT(true,10,800,500,100)

//////////////////////////////////////////////////
propUseTimeB = GETTIME( 600 / 86400 ); // petのえさ
propUseTime = GETTIME( 7200 / 86400 ); //財物
skillTime = GETTIME( 180 / 86400);
famCheckTime = GETTIME( 180 /86400);
isEvent = false;
collectTime = GETTIME( 70 / 86400 )
petTime = GETTIME( 600 / 86400 )

WHILE TRUE
        
//--------------------------------------------
//バフ、CTスキル関連
        
    ifb GETTIME() > propUseTime
        KBD(VK_F12,0,1000);
        KBD(VK_F12,0,100);
        KBD(VK_F12,0,100);
        propUseTime = GETTIME( 7350 / 86400 );
    endif
        
        //MMV(30,240,100)

        //CALL ../OtherFiles/allbuffs_kanna.uws;//buffチェック
    ifb GETTIME() > skillTime
        lib.useMaprage();
        useSkill();
        sleep(0.1);
        skillTime = GETTIME( 180 / 86400 );
    endif
        

    ifb GETTIME() > petTime
        KBD(VK_T,0,500)
        petTime = GETTIME( 600 / 86400 );
    endif

    ifb GETTIME() > famCheckTime
        lib.checkFamiliarPower();
        famCheckTime = GETTIME( 180 /86400);
        sleep(0.5)
    endif


//--------------------------------------------
//狩り、ルーンチjェック

    WHILE !CHKIMG("../picture/黄点.BMP",0,0,0,25,150) //下段を左へ移動しながら狩り

        ret = checkRuneStage();
        ifb ret <> 0
            lib.OpenRune();
        endif	
    
        ifb chkimg("../picture/kishin.BMP")
            while chkimg("../picture/kishin.BMP")
                KBD(VK_H,0,100)//　鬼神
                if !chkimg("../picture/kishin.BMP")then break
                SLEEP(0.1)
            wend
        endif	
    
        KBD(VK_left,1)
            if chkimg("../picture/黄点.bmp",0,0,0,25,150)then break
                for x = 1 to 4
                    KBD(VK_X,0,80)//紫扇
                next
            if chkimg("../picture/黄点.bmp",0,0,0,25,150)then break
        KBD(VK_SPACE,0,350)//テレポ
        KBD(VK_SPACE,0,50)
            if chkimg("../picture/黄点.bmp",0,0,0,25,150)then break
        sleep(0.2)

        skill.pSkill();
        util.KannnaSkillCheck();
        lib.UrgentCheck();//CCmode();
        cGameMaster();
        channelChange();
    
    WEND

        KBD(VK_left,2)
        ifb isEvent
            KBD(VK_Q,0,250)
        endif

    WHILE　CHKIMG("../picture/黄点.BMP",0,0,0,30,150)//左角にいる場合は左上の足場直下に移動
        KBD(VK_right,1)
        SLEEP(0.3)
        IF　!CHKIMG("../picture/黄点.BMP",0,0,0,30,150) then break
    WEND
    
    KBD(VK_right,2)
    
    WHILE　!CHKIMG("../picture/黄点.BMP",0,0,0,160,110)//下段にいるならロープを使用する
        KBD(VK_B,0,100)
        SLEEP(0.8)
        IF　CHKIMG("../picture/黄点.BMP",0,0,0,160,110) then break
    WEND

    WHILE !CHKIMG("../picture/黄点.BMP",0,145,90,160,150) //上段を右へ移動しながら狩り

        cGameMaster()

        ifb !chkimg("../picture/黄点.BMP",0,0,0,160,110)
            KBD(VK_B,0,100)
            SLEEP(0.8)
        endif
    
        ifb chkimg("../picture/kishin.bmp")
            while chkimg("../picture/kishin.bmp")
                KBD(VK_H,0,100)//　鬼神
                    if !chkimg("../picture/kishin.bmp")then break
                SLEEP(0.1)
            wend
        endif
    
        KBD(VK_right,1)
            if chkimg("../picture/黄点.bmp",0,145,90,160,150)then break
                for x = 1 to 4
                    KBD(VK_X,0,80)//紫扇
                next
            if chkimg("../picture/黄点.bmp",0,145,90,160,150)then break
        KBD(VK_SPACE,0,350)//テレポ
        KBD(VK_SPACE,0,50)
            if chkimg("../picture/黄点.bmp",0,145,90,160,150)then break
        sleep(0.2)
    WEND
    
    KBD(VK_right,2)
    
    WHILE CHKIMG("../picture/黄点.BMP",0,0,0,160,110) //右上から下テレポ処理
        cGameMaster()
        ifb GETTIME() > collectTime // 回収時間判定
            collectTime = GETTIME( 80 / 86400 );
            KBD(VK_LEFT,1)
            flag = true;
            COLLECT_ROPE_AREA = 104
            ifb flag 
                ifb chkimg("../picture/黄点.bmp",0,120,90,130,120)
                    KBD(VK_SPACE,0,100)
                    flag = false
                    ifb COLLECT_ROPE_AREA < G_IMG_Y
                        print G_IMG_Y
                        KBD(VK_DOWN,2)
                        KBD(VK_UP,1,100)
                        KBD(VK_SPACE,0,100)
                        KBD(VK_UP,2,100)
                    endif 
                endif
            endif

            ifb chkimg("../picture/黄点.bmp",0,65,90,75,110)
                KBD(VK_SPACE,0,100)
            endif
        
            ifb !chkimg("../picture/黄点.bmp",0,0,0,160,110)
                KBD(VK_LEFT,2,100)
                lib.useMaprage();
                break;
            endif

        else
            KBD(VK_down,1,50)//下ジャンプ準備
            KBD(VK_SPACE,0,300)//下テレポ
            if !chkimg("../picture/黄点.bmp",0,0,0,160,110) then break
            KBD(VK_SPACE,0,50)//下テレポ
            KBD(VK_SPACE,0,50)//下テレポ
            KBD(VK_down,2)//下入力解除
            if !chkimg("../picture/黄点.bmp",0,0,0,160,110) then break
            sleep(0.3)
            if !chkimg("../picture/黄点.bmp",0,0,0,160,110) then break
        endif
    WEND
    
WEND
//=========================================
// param   : None 
// comment : 赤点と遭遇しているか確認
//=========================================
function checkCallRed()

    ifb chkimg("../picture/赤点.BMP",0,0,0,250,200)
        logger.logWriter(LogLevel.LOG_INFO,"赤点を検知しました。");
        //result = constant.REDPOINT_TRUE;
        //CallRed(1);
    endif
    
    result = 1;
    
fend
//=========================================
// param   : None
// comment : 赤点と遭遇している場合の処理
//=========================================
function CallRed(num)

    ifb num = 1
    //赤点＆GM対応
        while chkimg("../picture/赤点.BMP",0,0,0,250,200)
            
            kbd(vk_left,2)
            
            for x = 1 to 5		
                SLEEP(2)
                if !chkimg("../picture/赤点.BMP",0,0,0,250,200) then break
            next
                if !chkimg("../picture/赤点.BMP",0,0,0,250,200) then break
            //■GM対策■
            ifb chkimg("../picture/replyRequest.bmp",1,0,580,500,800) and chkimg("../picture/赤点.bmp",0,0,0,250,250) and !chkimg("../picture/ハート拡声器.bmp",1,0,580,500,800)
                sound("BEEP")
                sound("BEEP")
                sound("BEEP")
                KBD(VK_1,CLICK,1000)
                    sleep(0.5)
                        
                    VALUE = RANDOM(6)
                    SELECT VALUE
                        case 1
                            SendStr(0,"こんちゃ")
                        case 2
                            SendStr(0,"おいっす～")
                        case 3
                            SendStr(0,"はい")
                        case 4
                            SendStr(0,"ほーい")
                        case 5
                            SendStr(0,"こん")
                        case 6
                            SendStr(0,"おつかれさまです")
                    SELEND
                    
                KBD(VK_CTRL,1,500) // Ctrl+Vで↑を貼り付け
                KBD(VK_V,0,100)
                KBD(VK_CTRL,2,100)
                KBD(VK_ENTER,0,500) // Enterで発言
                KBD(VK_ENTER,0,500)
                sleep(0.5)
                CTRLWIN(GETID("MapleStory","MapleStoryClass"), CLOSE)
                kbd(vk_enter,0,500)
                logger.logWriter(LogLevel.LOG_INFO,"GMに遭遇しました");
                exitexit
            endif
                kbd(vk_ESCAPE,0,50)
                kbd(VK_RETURN,0,300)
                kbd(VK_LEFT,1,300)
                kbd(VK_LEFT,2,150)
                kbd(VK_RETURN,0,300)
                SLEEP(3)
                if !chkimg("../picture/赤点.BMP",0,0,0,250,200) then break
        wend
    endif
    
    result = MAPLE_RESULT_OK; 
    
fend

//=========================================
// param   : None 
// comment : ルーンが出現しているか確認
//=========================================
function checkRuneStage()

    // ルーンがどのステージにあるか
    ifb chkimg(lib.picPathHelper("runePoint"),0,20,94,62,100)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを上段①で発見しました。");
        moveStage(1);
        result = constant.DISCOVERY_RUNE;
    elseif chkimg(lib.picPathHelper("runePoint"),0,70,94,111,100)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを上段②で発見しました。");
        moveStage(2);
        result = constant.DISCOVERY_RUNE;
    elseif chkimg(lib.picPathHelper("runePoint"),0,117,94,160,100)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを上段③で発見しました。");
        moveStage(3);
        result = constant.DISCOVERY_RUNE;
    elseif chkimg(lib.picPathHelper("runePoint"),0,0,112,160,120)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを下段で発見しました。");
        moveStage(4);
        result = constant.DISCOVERY_RUNE;
    endif
    
    result = constant.UNDISCOVERED_RUNE;
fend

//=========================================
// param   : 1 or 2 or 3 or 4
// comment : ルーンが出現している段へ移動
//=========================================
function moveStage(num)

        kbd(vk_right,2)
        kbd(vk_left,2)
        KBD(VK_DOWN,2)
        
    // 上段①にルーンがある場合は左へいって下段にいるならロープ
        ifb num = 1

            while !chkimg("../picture/黄点.BMP",0,0,0,50,150)//左側にキャラを移動
                KBD(VK_left,1)
                IF CHKIMG("../picture/黄点.BMP",0,0,0,50,150) THEN BREAK
                KBD(VK_SPACE,0,100)
                IF CHKIMG("../picture/黄点.BMP",0,0,0,50,150) THEN BREAK					
            wend

            sleep(0.1)			
            KBD(VK_left,2)
                
            while chkimg("../picture/黄点.BMP",0,0,0,35,150)//左側にキャラを移動
                KBD(VK_right,1)
                IF !CHKIMG("../picture/黄点.BMP",0,0,0,35,150) THEN BREAK
                KBD(VK_SPACE,0,100)
                IF !CHKIMG("../picture/黄点.BMP",0,0,0,35,150) THEN BREAK					
            wend

            KBD(VK_right,2)
            KBD(VK_B,0,250)
            result = 0;
    // 上段②にある場合は中央へ位置を合わせてロープで高さを合わせる
        elseif num = 2
    
            while !chkimg("../picture/黄点.BMP",0,0,0,97,150)//左側にキャラを移動
                KBD(VK_left,1)
                IF CHKIMG("../picture/黄点.BMP",0,0,0,97,150) THEN BREAK
                KBD(VK_SPACE,0,100)
                IF CHKIMG("../picture/黄点.BMP",0,0,0,97,150) THEN BREAK					
            wend

            sleep(0.1)
            KBD(VK_left,2)
            
            while chkimg("../picture/黄点.BMP",0,0,0,82,150)//左側にキャラを移動
                KBD(VK_right,1)
                IF !CHKIMG("../picture/黄点.BMP",0,0,0,82,150) THEN BREAK
                KBD(VK_SPACE,0,100)
                IF !CHKIMG("../picture/黄点.BMP",0,0,0,82,150) THEN BREAK		
            wend
            KBD(VK_right,2)
            KBD(VK_B,0,250)			
            result = 0;
    
    //上段③にルーンがある場合は右へいって下段にいるならロープ
        elseif num = 3

            while chkimg("../picture/黄点.BMP",0,0,0,145,150)//左側にキャラを移動
                KBD(VK_right,1)
                IF !CHKIMG("../picture/黄点.BMP",0,0,0,145,150) THEN BREAK
                KBD(VK_SPACE,0,100)
                IF !CHKIMG("../picture/黄点.BMP",0,0,0,145,150) THEN BREAK		
            wend

            KBD(VK_right,2)
            KBD(VK_B,0,250)

            result = 0;
        
    //中段①にある場合は左へ行ってロープ	
        elseif num = 4
            result = 0;
        endif
        
    lib.OpenRune();
    result = 0;
    
fend
//////////////////////////////////////////////////
PROCEDURE 並列1
    
WHILE TRUE

    SLEEP(5)

    WHILE TRUE
//--------------------------------------------
//虹色探知機対策（天狗ランダム周期発動）

    IF CHKIMG("../picture/赤点.BMP",0,0,0,250,200)THEN break
    IF CHKIMG("../picture/紫点.BMP",0,0,0,250,200)THEN break
    IF CHKIMG("../picture/残り時間.BMP",0,250,0,600,300)then break
    //if chkimg("../picture/メイプレージ.bmp",0,800,0,1024,200) then break
    IF CHKIMG("../picture/rune.BMP",0,0,0,200,200)
        sleep(10)
        break
    endif
    IF !CHKIMG("../picture/rune.BMP",0,0,0,200,200) THEN KBD(VK_A,0,100)//天狗
    IF !CHKIMG("../picture/rune.BMP",0,0,0,200,200) THEN KBD(VK_A,0,100)
    SLEEP(1.3)

    WEND
        
WEND
        
FEND
//////////////////////////////////////////////////
PROCEDURE 並列2

    SLEEP(10)
    isEnc = false;
    wzEditValue = 0 
WHILE TRUE

    //lib.activeWindow();
    
    SLEEP(1)
    
        ifb wzEditValue <> 2
            ifb chkimg("../picture/赤点.bmp",0,0,0,200,200)
                logger.logWriter(LogLevel.LOG_WARN,Messages.DETECTION_RED_POINT);
                lib.alartSound();  
                wzEditValue = 1;
            endif   
        endif

        ifb wzEditValue <> 1 
            ifb chkimg("../picture/redpoint2.bmp",0,0,0,200,200)
                ifb !isEnc;
                    isEnc = true;
                    logger.logWriter(LogLevel.LOG_WARN,Messages.DETECTION_RED_POINT);
                endif
                lib.alartSound();
                wzEditValue = 2;
            else
                isEnc = false;
            endif
        endif   

        IFB !CHKIMG("../picture/画面フリーズ.BMP",0,0,0,300,300)
            SOUND("beep")
            SLEEP(1)
        ENDIF

        IFB CHKIMG("../picture/会話.BMP",0,0,0,800,600)
            KBD(VK_ESCAPE,CLICK,50)
        ENDIF

        IFB CHKIMG("../picture/赤点.BMP",0,0,0,200,200)
            SOUND("beep")
            SLEEP(1)
        ENDIF

        IFB CHKIMG("../picture/確認.BMP",0,0,0,800,600)
            BTN(LEFT,0,G_IMG_X,G_IMG_Y,100)
            MMV(400,100,300)
        ENDIF

        IFB CHKIMG("../picture/NPC.BMP",0,0,0,250,200) 
            sound("beep")
            EXITEXIT
        ENDIF

        IFB CHKIMG("../picture/緑点.BMP",0,0,0,250,200) 
            sound("beep")
            EXITEXIT
        ENDIF

        IFB CHKIMG("../picture/石化.bmp",0,0,0,1368,800)
            For i = 1 to 20
                KBD(VK_LEFT,0,100);
                KBD(VK_RIGHT,0,100);
            NEXT
        ENDIF
        
        IFB CHKIMG("../picture/石化2.bmp",0,0,0,1368,800)
            For ii = 1 to 20
                KBD(VK_LEFT,0,100);
                KBD(VK_RIGHT,0,100);
            NEXT
        ENDIF
        
WEND//ループの最後
    
FEND

function useSkill()

    KBD(VK_H,0,500);
    for i = 1 to 5
        KBD(VK_H,0,200)
    next
    KBD(VK_G,0,600);
    sleep(1);
    KBD(VK_2,0,1000);

    result = 0;

fend

function cGameMaster()
        ifb chkimg("../picture/GMResponse/ご返答.bmp",1,5,600,420,780) and _
            chkimg("../picture/redpoint.bmp",0,10,85,250,160) and _
            !chkimg("../picture/heart.bmp",0,5,600,400,780)
            print "Detected GameMaster"
            KBD(VK_SCROLL,CLICK,100)
            lib.checkGameMaster();
            BTN(LEFT,CLICK,740,340,500);
            //exitexit
        endif
        result = 0;
fend

function channelChange()

    while true
        //▼▼エリボ処理（ｃｈ変更）▼▼
        ifb chkimg("../picture/残り時間.bmp",0,0,0,700,200) 
            count = 0
            sleep(5)

            while true
                sleep(0.1)

                kbd(vk_F7,0,500)
                kbd(vk_F7,0,200)

                // ch = 1//RANDOM(1)
                // for i = 1 to ch
                //     KBD(VK_RIGHT,0,150)
                // next
                KBD(VK_RIGHT,0,150)
                kbd(vk_enter,0,500)
                sleep(1)
                BTN(left,0,300,100,100)
                while !chkimg("../picture/黄点.bmp",0,0,40,250,150)
                    sleep(0.4)
                wend
                BTN(left,0,300,100,100)

                for x = 1 to 10
                    if chkimg("../picture/redpoint.bmp",0,0,45,250,170) or _
                    chkimg("../picture/guild_member.bmp",0,0,45,250,170) or _
                    chkimg("../picture/friend_point.bmp",0,0,45,250,170) or _
                    chkimg("../picture/残り時間.bmp",0,0,0,700,200) then count = count + 1
                    sleep(0.2)
                next

                ifb count >= 1
                    count = 0
                    ifb chkimg("../picture/確認.bmp",0,200,200,800,650)
                        btn(left,0,g_img_x,g_img_y,500)
                        btn(left,0,g_img_x,g_img_y,500)
                    endif
                else
                    exit;
                endif
            wend
        else
            exit;
        endif
    wend
    result = 0
fend