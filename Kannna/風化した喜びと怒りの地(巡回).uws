//=========================================//
// Map Name    : 風化した喜びと怒りの地
//=========================================//

//=========================================//
// comment     : None
// param       : None
// return      : None
// ========================================//
// Display Dpl : 800x600 or 1366x768(Rune)
//=========================================//
// Copy Right (C) 2019 All Right Reserved. 
//   @author k.kawabata @kawaken1025
//     Create Date : 2019/02/19
//=========================================//

CALL ../MapleAPI/MapleAPI.uws;
CALL KeySetting.uws;
CALL KannnaUtil.uws;
thread lib.parallelProgramExitMode();

while true;
    //Acquisition of Time : Get the time after 3 minutes
    reUseSkillTime = GETTIME( 150 / 86400 );
    util.useSkill();
    SLEEP(0.5);
    KBD(VK_T,0,2000)

    while true;
        for i = 1 to 2
            ifb chkimg(lib.picPathHelper("yellowPoint"),0,8,85,205,170);
                moveAttack(g_img_x,g_img_y);
            endif
        next
        util.KannnaSkillCheck_NotUseRecv();
        skill.pSkill();
        // ルーンが出現しているか確認します。
        // 出現していた場合は解除します
        ret = checkRuneStage();
        ifb ret <> 0
            lib.OpenRune();
        endif

        //3minutes elapsed?
        if GETTIME() > reUseSkillTime then break;
    wend
wend


function moveAttack(x,y)

    ifb 0 < x and x < 95 and 106 < y and y < 119
        rightAttack();
    elseif 92 < x and x < 140 and 120 < y and y < 134
        upAttack();
    elseif 75 < x and x < 167 and 89 < y and y < 104
        rightAttack();
    elseif 148 < x and x < 196 and 109 < y and y < 123
        downAttack();
    elseif 141 < x and x < 196 and 130 < y and y < 142
        downAttack();
    elseif 50 < x and x < 193 and 140 < y and y < 158
        leftAttack();
    elseif 0 < x and x < 62 and 140 < y and y < 158
        upAttack();
    else 
        leftAttack();
    endif

    result = 0;
fend

function rightAttack()
    KBD(VK_RIGHT,1,300);
    KBD(key.TELEPORT_KEY,0,500);
    KBD(key.BRAGGART_KEY,0,1000);
    KBD(VK_RIGHT,2,500)
    result = 0;
fend

function leftAttack()
    KBD(VK_LEFT,1,300);
    KBD(key.TELEPORT_KEY,0,500);
    KBD(key.BRAGGART_KEY,0,1000);
    KBD(VK_LEFT,2,500);
    result = 0;
fend

function downAttack()
    KBD(key.BRAGGART_KEY,0,700);
    KBD(VK_DOWN,1,1000);
    for i = 1 to 3
        KBD(VK_C,0,100);
    next
    KBD(VK_DOWN,2,300);
    KBD(key.BRAGGART_KEY,0,1000);
    result = 0;
fend

function upAttack()
    KBD(key.BRAGGART_KEY,0,700);
    KBD(VK_UP,1,1000);
    for i = 1 to 2
        KBD(key.TELEPORT_KEY,0,100);
    next
    KBD(VK_UP,2,300);
    KBD(key.BRAGGART_KEY,0,1000);
    result = 0;
fend

//=========================================
// param   : None 
// comment : ルーンが出現しているか確認
//=========================================
function checkRuneStage()

    // 上段にあるか
    ifb chkimg(lib.picPathHelper("runePoint"),0,75,88,170,104)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを最上段で発見しました。");
        moveStage(1,G_IMG_X,G_IMG_Y);
        result = 1;
    elseif chkimg(lib.picPathHelper("runePoint"),0,20,104,92,118)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを左中段で発見しました。");
        moveStage(2,G_IMG_X,G_IMG_Y);
        result = 1;
    elseif chkimg(lib.picPathHelper("runePoint"),0,144,108,195,123)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンをポータル側で発見しました。");
        moveStage(3,G_IMG_X,G_IMG_Y);
        result = 1;
    elseif chkimg(lib.picPathHelper("runePoint"),0,55,120,140,132)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを中段で発見しました。");
        moveStage(4,G_IMG_X,G_IMG_Y);
        result = 1;
    elseif chkimg(lib.picPathHelper("runePoint"),0,130,131,190,140)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンをポータル下段で発見しました。");
        moveStage(5,G_IMG_X,G_IMG_Y);
        result = 1;
    elseif chkimg(lib.picPathHelper("runePoint"),0,15,140,190,155)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを最下段で発見しました。");
        moveStage(6,G_IMG_X,G_IMG_Y);
        result = 1;   
    endif
    
    result = 0;
fend


//=========================================
// param   : 1 or 2
// comment : ルーンが出現している段へ移動
//=========================================
function moveStage(num,x,y)

    // いったん一番左へいく
    KBD(VK_LEFT,1,500)
    while true
        ifb chkimg(lib.picPathHelper("yellowPoint"),0,15,104,40,125)
            KBD(VK_LEFT,2,500)
            KBD(VK_DOWN,1,500)
            KBD(key.TELEPORT_KEY,0,250)
            KBD(key.TELEPORT_KEY,0,250)
            KBD(VK_DOWN,2,300)
        endif
        if chkimg(lib.picPathHelper("yellowPoint"),0,15,135,35,160) then break;
        KBD(key.TELEPORT_KEY,0,100)
    wend
    KBD(VK_LEFT,2,500)
    
    // 最下段にルーンがある場合は左へ行って終了
    ifb num = 6
        result = 0;
    
    elseif num = 1
        KBD(VK_RIGHT,1,500)
        while true
            if chkimg(lib.picPathHelper("yellowPoint"),0,103,139,125,160) then break;
        wend
        KBD(VK_RIGHT,2,100)

        KBD(VK_UP,1,100)
        while true
            if chkimg(lib.picPathHelper("yellowPoint"),0,75,88,170,104) then break;
            KBD(key.TELEPORT_KEY,0,150);
            KBD(key.TELEPORT_KEY,0,150);
        wend
        KBD(VK_UP,2,100)

    elseif num = 2
        KBD(VK_UP,1,100)
        KBD(key.TELEPORT_KEY,0,250);
        KBD(key.TELEPORT_KEY,0,250);
        KBD(VK_UP,2,100)

    elseif num = 3
        KBD(VK_RIGHT,1,500)
        while true
            if chkimg(lib.picPathHelper("yellowPoint"),0,180,140,192,160) then break;
            KBD(key.TELEPORT_KEY,0,100)
        wend
        KBD(VK_RIGHT,2,500)
        KBD(VK_UP,1,100)
        for i = 1 to 3
            KBD(key.TELEPORT_KEY,0,250);
            KBD(key.TELEPORT_KEY,0,250);
        next
        KBD(VK_UP,2,100)

    elseif num = 4
        KBD(VK_RIGHT,1,500)
        while true
            if chkimg(lib.picPathHelper("yellowPoint"),0,103,139,125,160) then break;
        wend
        KBD(VK_RIGHT,2,100)

        KBD(VK_UP,1,100)
        KBD(key.TELEPORT_KEY,0,150);
        KBD(key.TELEPORT_KEY,0,150);
        KBD(VK_UP,2,100)

    elseif num = 5
        KBD(VK_RIGHT,1,500)
        while true
            if chkimg(lib.picPathHelper("yellowPoint"),0,180,140,192,160) then break;
            KBD(key.TELEPORT_KEY,0,100)
        wend
        KBD(VK_RIGHT,2,500)
        KBD(VK_UP,1,100)
        KBD(key.TELEPORT_KEY,0,250);
        KBD(key.TELEPORT_KEY,0,250);
        KBD(VK_UP,2,100)

    endif
    lib.OpenRuneXY(x,y,false);
    
    result = 0;
fend