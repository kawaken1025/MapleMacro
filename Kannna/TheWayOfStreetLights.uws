
CALL ../MapleAPI/MapleAPI.uws;
CALL KeySetting.uws;

lib.activeWindow();
thread lib.parallelProgramExitMode();
thread para();

petTime = GETTIME( 300 / 86400 )

while true
    KBD(VK_LEFT,1,100);
    for i = 1 to 3
        KBD(VK_W,0,200);
    next
    while true
        KBD(VK_LEFT,1,100);
        Attack();
        if chkimg(lib.picPathHelper("yellowPoint"),0,0,0,48,147) then break;
        lib.urgentCheck();
    wend

    KBD(VK_LEFT,2,200);
    upStage();

    while true
        KBD(VK_RIGHT,1,100)
        Attack();
        if !chkimg(lib.picPathHelper("yellowPoint"),0,0,0,135,130) then break;
        lib.urgentCheck();
    wend
    
    KBD(VK_RIGHT,2,200);
    for i = 1 to 3
        KBD(VK_H,0,200);
    next

    lib.CheckAutoLieDetector()
    ifb petTime < GETTIME()
        KBD(VK_T,0,1000)
        logger.logWriter(LogLevel.LOG_INFO,"ペットの餌を使用しました。");
        petTime = GETTIME( 1200 / 86400 )
    endif

wend

function Attack()
    KBD(VK_SPACE,0,300);
    KBD(VK_SPACE,0,300);    
    for i = 1 to 2
        KBD(VK_C,0,150);
    next
    for i = 1 to 4
        KBD(VK_X,0,100);
    next
    result = 0;
fend

function para()
    while true
        //sleep(1)
        GETTIME();
        ifb !lib.IsAutoLieDetectorTime()
            KBD(VK_A,0,150);
            KBD(VK_A,0,150);
            sleep(1.5)
        endif
    wend
    result = 0;
fend


function upStage()

    KBD(VK_RIGHT,1,500)
    while true
        ifb !chkimg(lib.picPathHelper("yellowPoint"),0,0,0,55,130)
            break;
        endif
    wend
    KBD(VK_RIGHT,2,500)
    ifb chkimg(lib.picPathHelper("yellowPoint"),0,120,90,175,140)
        print "not up"
        exit;
    endif
    KBD(VK_UP,1,500)
    KBD(VK_SPACE,0,500)
    KBD(VK_UP,2,100)
    
    result = 0;
fend

