//=========================================//
// Map Name    : レヘルン　本性が現れる場所2
//=========================================//

//=========================================//
// comment     : カンナは下で狩る
// param       : None
// return      : None
// ========================================//
// Display Dpl : 800x600 or 1366x768
//=========================================//
// Copy Right (C) 2019 All Right Reserved. 
//   @author k.kawabata @kawaken1025
//     Create Date : 2019/02/09
//=========================================//

//=========================================
// init
//=========================================
// MapleAPI : LogWriter.uws , MapleLibrary.uws , UseSkillFiveJob.uws
CALL ../MapleAPI/MapleAPI.uws;
// import Luminous skillKeySetting
CALL KeySetting.uws;
// Util - sugarTime exec
CALL ../Util/MapleUtil.uws;
// multiThread checkRedPoint and checkMineralization
thread lib.parallelProgramExitMode();
thread lib.RegularOnClick();
thread lib.KillMicrosoftEdge();
// MessageWindow init
CALL KannnaUtil.uws;
CALL ../Util/MapleUtil.uws;

propUseTime = GETTIME( 7350 / 86400 ); // 財物
while true;
    mutil.useBlackUnionEventItem();
    //Acquisition of Time : Get the time after 3 minutes
    reUseSkillTime = GETTIME( 150 / 86400 );
    collectTime = GETTIME( 110 / 86400 );
    oyabunTime = GETTIME( 30 / 86400 )
    useSkill();
    KBD(VK_T,0,500);
    lib.checkFamiliarPower();
    lib.useMaprage();
    while true;
        cYp();
        util.TenguAttack();
        // ルーンが出現しているか確認します。
        // 出現していた場合は解除します
        ret = checkRuneStage()
        ifb ret <> 0
            sleep(0.5);
            lib.OpenRune();
            sleep(1);
        endif
        KBD(VK_B,0,800);
        lib.UrgentCheckCCmode();
        sleep(1.7);
        cYp();
        util.TenguAttack();
        RemoveCatchRope();
        // ルーンが出現しているか確認します。
        // 出現していた場合は解除します
        ret = checkRuneStage()
        ifb ret <> 0
            lib.OpenRune();
            sleep(1);
        endif
        DownJump();
        lib.UrgentCheckCCmode();
        KannnaSkillCheck();
        skill.pSkill();
        RemoveCatchRope();
        //SLEEP(1)
        //3minutes elapsed?
        time = GETTIME()
        ifb time > oyabunTime
            KBD(VK_W,0,500)
            oyabunTime = GETTIME(30 /86400)
        endif
        ifb time > collectTime
            collect();
            collectTime = GETTIME( 110 / 86400);
        endif
        if time > reUseSkillTime then break;
        ifb GETTIME() > propUseTime
            KBD(VK_F12,0,1000);
            propUseTime = GETTIME( 7350 / 86400 );
        endif
    wend
wend

function cYp()

    ifb chkimg("../picture/yellowPoint.bmp",0,0,0,50,135)
        KBD(VK_RIGHT,1,200)
        KBD(VK_SPACE,0,600)
        while true
            ifb chkimg("../picture/yellowPoint.bmp",0,65,110,170,135)
                KBD(VK_RIGHT,2,100);
                break;
            endif
        wend
        exit
    endif
    ifb chkimg("../picture/yellowPoint.bmp",0,90,90,160,135)
        KBD(VK_LEFT,1,200)
        KBD(VK_SPACE,0,600)
        while true
            ifb chkimg("../picture/yellowPoint.bmp",0,0,0,100,135)
                KBD(VK_LEFT,2,100);
                break;
            endif
        wend
        exit
    endif
    result = 0;
fend

function collect()


    RemoveCatchRope();
    print "アイテム回収を行います"
    while true
        KBD(VK_LEFT,1);
        KBD(VK_SPACE,0,800);
        if chkimg("../picture/yellowPoint.bmp",0,0,0,35,135) then break;
    wend
    KBD(VK_LEFT,2,200);
    KBD(VK_B,0,1000);
    SLEEP(1.5);
    while true
        KBD(VK_RIGHT,1);
        KBD(VK_SPACE,0,800);
        if chkimg("../picture/yellowPoint.bmp",0,140,110,170,135) then break;
    wend
    KBD(VK_RIGHT,2,200);
    while true
        KBD(VK_LEFT,1);
        KBD(VK_SPACE,0,800);
        if chkimg("../picture/yellowPoint.bmp",0,0,110,100,135) then break;
    wend
    KBD(VK_LEFT,2,200);

    
    result = 0;
fend

function DownJump()

    KBD(VK_DOWN,1,500)
    for i = 1 to 3
        KBD(VK_C,0,100)
        KBD(VK_SPACE,0,100)
    next
    KBD(VK_DOWN,2,100)
    for i = 1 to 3
        KBD(VK_U,0,100)
    next
    result = 0;
fend

function RemoveCatchRope()

    ifb chkimg("../picture/yellowPoint.bmp",0,0,0,300,300)
        ifb 100 < G_IMG_Y and G_IMG_Y < 120
            print "rope";
            KBD(VK_DOWN,1,100);
            KBD(VK_DOWN,2,3500);
            KBD(VK_RIGHT,1,100);
            for i = 1 to 2
                KBD(VK_SPACE,0,200);
            next
            KBD(VK_RIGHT,2,1000);
        endif
    endif
    result = 0;
fend


//=========================================
// param   : None 
// comment : ルーンが出現しているか確認
//=========================================
function checkRuneStage()

	ret = 0;
    // 下段にあるか
    ifb chkimg("../picture/runePoint.bmp",0,25,121,160,135)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを下段で発見しました");
        ret = 1;
    // 上段左にあるか
    elseif chkimg("../picture/runePoint.bmp",0,20,90,110,107)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを上段左で発見しました");
        moveStage(1,G_IMG_X,G_IMG_Y);
        ret = 1;
    // 上段右にあるか
    elseif chkimg("../picture/runePoint.bmp",0,117,90,150,107)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを上段右で発見しました");
        moveStage(2,G_IMG_X,G_IMG_Y);
        ret = 1;
    // 左建物上にあるか
    elseif chkimg("../picture/runePoint.bmp",0,20,107,55,117)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを左建物で発見しました");
        moveStage(3,G_IMG_X,G_IMG_Y);
        ret = 1;
    endif
    result = ret;
fend

function moveStage(num,x,y)

    while true
        KBD(VK_RIGHT,1);
        KBD(VK_SPACE,0,800);
        if chkimg("../picture/yellowPoint.bmp",0,140,110,160,135) then break;
    wend
    KBD(VK_RIGHT,2,100)
    ifb num = 1
        // 一番左へいく
        KBD(VK_LEFT,1,500)
        while true
            KBD(key.TELEPORT_KEY,0,250)
            KBD(key.TELEPORT_KEY,0,250)
            if chkimg("../picture/yellowPoint.bmp",0,0,0,35,135) then break;
        wend
        KBD(VK_LEFT,2,500)
        KBD(VK_B,0,700)
        SLEEP(2)
    elseif num = 2
        // 一番右へいく
        KBD(VK_RIGHT,1,500)
        while true
            KBD(key.TELEPORT_KEY,0,250)
            KBD(key.TELEPORT_KEY,0,250)
            if chkimg("../picture/yellowPoint.bmp",0,145,120,160,135) then break;
        wend
        KBD(VK_RiGHT,2,500)
        // 少し左へ
        KBD(VK_LEFT,1,500)
        while true
            if chkimg("../picture/yellowPoint.bmp",0,123,120,140,135) then break;
        wend
        KBD(VK_LEFT,2,50)
        KBD(VK_B,0,700)
        SLEEP(2)
    elseif num = 3
        // 一番左へいく
        KBD(VK_LEFT,1,500)
        while true
            KBD(key.TELEPORT_KEY,0,250)
            KBD(key.TELEPORT_KEY,0,250)
            if chkimg("../picture/yellowPoint.bmp",0,0,0,35,135) then break;
        wend
        KBD(VK_LEFT,2,500)
        KBD(VK_B,0,700)
        SLEEP(2)
    endif
    result = 0;
fend

function useSkill()

	KBD(VK_H,0,500);
    for i = 1 to 5
        KBD(VK_H,0,200)
    next
    KBD(VK_G,0,1000);
    sleep(2);
    KBD(VK_2,0,500);
    KBD(VK_W,0,800);

	result = 0;

fend

    function KannnaSkillCheck()
        x1 = 800;
        y1 = 600;
        x2 = 1366;
        y2 = 800;

        KBD(VK_U,0,300);

        ifb chkimg("../picture/BlessingsOfPrincess.bmp",0,x1,y1,x2,y2)
            KBD(VK_N,0,500);
            //sleep(1);
        endif

        ifb chkimg("../picture/雪女.bmp",0,x1,y1,x2,y2)
            KBD(VK_F5,0,500);
        endif

        ifb chkimg("../picture/LingStone.bmp",0,x1,y1,x2,y2)
            KBD(VK_HOME,0,500);
        endif

        ifb chkimg("../picture/白狐.bmp",0,x1,y1,x2,y2)
            KBD(VK_CTRL,0,100);
            exit;
            sleep(2);
        elseif chkimg("../picture/WhiteFox.bmp",0,x1,y1,x2,y2)
            KBD(VK_CTRL,0,100);
            exit;
            sleep(2);
        endif
        if chkimg(lib.picPathHelper("SpiderInMirror"),0,0,0,1368,800) then KBD(VK_DELETE,0,500);
        
        result = 0;
    fend