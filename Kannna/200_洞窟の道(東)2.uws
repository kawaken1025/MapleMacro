//=========================================//
// Map Name    : アルカナ　ケーヴロードの通路上
//=========================================//

//=========================================//
// comment     : 
// param       : None
// return      : None
// ========================================//
// Display Dpl : 800x600 or 1366x768
//=========================================//
// Copy Right (C) 2019 All Right Reserved. 
//   @author k.kawabata @kawaken1025
//     Create Date : 2019/02/09
//=========================================//

//=========================================
// init
//=========================================
// MapleAPI : LogWriter.uws , MapleLibrary.uws , UseSkillFiveJob.uws
CALL ../MapleAPI/MapleAPI.uws;
// import Luminous skillKeySetting
CALL KeySetting.uws;
// Util - sugarTime exec
CALL ../Util/MapleUtil.uws;
// multiThread checkRedPoint and checkMineralization
thread parallelProgramWaitMode();
thread lib.RegularOnClick();
thread lib.KillMicrosoftEdge();
public IsEventSkill = false;
// MessageWindow init
CALL KannnaUtil.uws;
CALL ../Util/MapleUtil.uws;


propUseTime = GETTIME( 7350 / 86400 ); // 財物
public reUseSkillTime
public collectTime
public oyabunTime
try
    while true;
        //mutil.useBlackUnionEventItem();
        //Acquisition of Time : Get the time after 3 minutes
        reUseSkillTime = GETTIME( 150 / 86400 );
        collectTime = GETTIME( 110 / 86400 );
        oyabunTime = GETTIME( 30 / 86400 )
        useSkill();
        KBD(VK_T,0,500);
        lib.checkFamiliarPower();
        lib.useMaprage();
        while true;
            oneWayAttack(VK_RIGHT,190,110,250,160);
            upStage();
            // ルーンが出現しているか確認します。
            // 出現していた場合は解除します
            ret = checkRuneStage()
            ifb ret <> 0
                lib.OpenRune();
            endif
            oneWayAttack(VK_LEFT,0,0,40,160);
            // 時間経過チェック
            if GETTIME() > reUseSkillTime then break;
            ifb GETTIME() > propUseTime
                KBD(VK_F12,0,1000);
                propUseTime = GETTIME( 7350 / 86400 );
            endif
        wend
    wend
except
    exitexit;
endtry

function upStage()

    while true
        KBD(VK_LEFT,1)
        if chkimg(lib.picPathHelper("yellowPoint"),0,190,0,220,160) then break;
    wend
    KBD(VK_LEFT,2)
    //KBD(VK_B,0,500)
    KBD(VK_UP,1,300)
    for i = 1 to 3
        KBD(VK_SPACE,0,200)
    next
    KBD(VK_UP,2)
    result = 0;
fend

function downStage()

    KBD(VK_DOWN,1,500)
    KBD(VK_C,0,100)
    KBD(VK_C,0,100)
    KBD(VK_C,0,100)
    KBD(VK_DOWN,2,1500)
      
    result = 0;
fend


function oneWayAttack(moveKey,x1,y1,x2,y2)
    
    isJaha = false;
    ifb chkimg(lib.picPathHelper("jaha"),0,0,0,1366,800)
        isJaha = true;
    endif
    while true
        ifb moveKey = VK_LEFT
            ifb chkimg(lib.picPathHelper("yellowPoint"),0,0,124,240,145)
                KBD(VK_UP,1)
                for i = 1 to 5
                    KBD(VK_SPACE,0,100)
                next
                KBD(VK_UP,2)
            endif
        endif
        KBD(moveKey,1)
        ifb isJaha
            AttackJaha();
            isJaha = false;
        endif

        for i = 1 to 2
            Attack();
            if chkimg(lib.picPathHelper("yellowPoint"),0,x1,y1,x2,y2) then break
        next
        //lib.UrgentCheckCCmode();
        KannnaSkillCheck();
        skill.pSkill();
        ifb chkimg(lib.picPathHelper("yellowPoint"),0,x1,y1,x2,y2)
            ifb 125 < G_IMG_Y and moveKey = VK_LEFT
                KBD(moveKey,2)
                KBD(VK_B,0,500)
                sleep(0.7)
            endif
            break;
        endif
    wend
    KBD(moveKey,2)
    //3minutes elapsed?
    ifb GETTIME() > oyabunTime
        KBD(VK_W,0,500)
        oyabunTime = GETTIME(30 /86400)
    endif
    result = 0;
fend

function Attack()
    for i = 1 to 5
        KBD(VK_SPACE,0,100);
    next   
    thread tengu()
    // for i = 1 to 2
    //     KBD(VK_C,0,150);
    // next
    for i = 1 to 6
        KBD(VK_X,0,100);
    next
    thread tengu()
    result = 0;
fend

function AttackJaha()
    time = GETTIME( 10/ 86400 )
    while true
        KBD(VK_DELETE,1,300)
        ifb GETTIME() > time
            break
        endif
    wend
    result = 0
fend

function tengu()
    for i = 1 to 3
        KBD(VK_A,0,300+random(50))
    next
    ifb chkimg(lib.picPathHelper("kishin"),0,0,0,1366,800) 
        while true
            KBD(VK_H,0,200);
            if !chkimg(lib.picPathHelper("kishin"),0,0,0,1366,800) then break;
        wend
    endif
    result = 0
fend

function DownJump()
    KBD(VK_DOWN,1,50)
    for i = 1 to 2
        KBD(VK_C,0,100)
        KBD(VK_SPACE,0,100)
    next
    KBD(VK_DOWN,2,500)
    result = false;
fend

//=========================================
// param   : None 
// comment : ルーンが出現しているか確認
//=========================================
function checkRuneStage()

    // 上段にあるか
    ifb chkimg(lib.picPathHelper("runePoint"),0,0,0,230,119)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを上段で発見しました。");
        moveStage(1);
        result = constant.DISCOVERY_RUNE;
    elseif chkimg(lib.picPathHelper("runePoint"),0,0,120,240,145)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを下段で発見しました。");
        moveStage(2);
        result = constant.DISCOVERY_RUNE;
    endif
    
    result = constant.UNDISCOVERED_RUNE;
fend


//=========================================
// param   : 1 or 2
// comment : ルーンが出現している段へ移動
//=========================================
function moveStage(num)

    // 上段にルーンがある場合は終了
    ifb num = 1
        result = 0;
    
    // 下段にある場合は下ジャンプ
    else
        DownJump();
        result = 0;
    endif
    lib.OpenRune();
    
    result = 0;
fend

function useSkill()

	KBD(VK_H,0,500);
    for i = 1 to 5
        KBD(VK_H,0,200)
    next
    KBD(VK_G,0,600);
    sleep(1);
    KBD(VK_2,0,1000);

	result = 0;

fend


public mOyabunTime = GETTIME( 30 / 86400 );
// 加護座標情報
public mBx1 = 0;
public mBy1 = 0;
public mBx2 = 0;
public mBy2 = 0;
// 雪女座標情報
public mYOx1 = 0;
public mYOy1 = 0;
public mYOx2 = 0;
public mYOy2 = 0;
// 霊石召喚座標情報
public mLSx1 = 0;
public mLSy1 = 0;
public mLSx2 = 0;
public mLSy2 = 0;
// 白狐座標情報
public mWFx1 = 0;
public mWFy1 = 0;
public mWFx2 = 0;
public mWFy2 = 0;
// スパイダーインミラー座標情報
public mSiMx1 = 0;
public mSiMy1 = 0;
public mSiMx2 = 0;
public mSiMy2 = 0;
// 暁の陣
public mSaLx1 = 0;
public mSaLy1 = 0;
public mSaLx2 = 0;
public mSaLy2 = 0;
public oyabunTime5th = GETTIME( 1 / 86400 );

function KannnaSkillCheck()
    x1 = 400;
    y1 = 400;
    x2 = 1366;
    y2 = 800;

    KBD(VK_U,0,300);

    ifb mSaLx1 = 0
        ifb chkimg("../picture/SengokuAlliance.bmp",0,x1,y1,x2,y2)
            KBD(key.SENGOKU_ALLIANCE,0,300);
            lib.SetCoordinate(mSaLx1, mSaLy1, mSaLx2, mSaLy2);
        endif
    else
        ifb chkimg("../picture/SengokuAlliance.bmp",0,mSaLx1, mSaLy1, mSaLx2, mSaLy2)
            KBD(key.SENGOKU_ALLIANCE,0,300);
        endif
    endif


    ifb mBx1 = 0
        ifb chkimg("../picture/BlessingsOfPrincess.bmp",0,x1,y1,x2,y2)
            KBD(key.BLESSING,0,100);
            sleep(0.2);
            lib.SetCoordinate(mBx1, mBy1, mBx2, mBy2);
        endif
    else
        ifb chkimg("../picture/BlessingsOfPrincess.bmp",0,mBx1,mBy1,mBx2,mBy2)
            KBD(key.BLESSING,0,100);
            sleep(0.2);
        endif            
    endif

    ifb mYOx1 = 0
        ifb chkimg("../picture/雪女.bmp",0,x1,y1,x2,y2)
            KBD(VK_F5,0,100);
            sleep(0.2);
            lib.SetCoordinate(mYOx1, mYOy1, mYOx2, mYOy2);
        endif
    else
        ifb chkimg("../picture/雪女.bmp",0,mYOx1, mYOy1, mYOx2, mYOy2)
            KBD(VK_F5,0,100);
            sleep(0.3);
        endif
    endif

    ifb mLSx1 = 0
        ifb chkimg("../picture/LingStone.bmp",0,x1,y1,x2,y2)
            KBD(VK_HOME,0,100);
            sleep(0.3);
            lib.SetCoordinate(mLSx1, mLSy1, mLSx2, mLSy2);
        endif
    else
        ifb chkimg("../picture/LingStone.bmp",0,mLSx1, mLSy1, mLSx2, mLSy2)
            KBD(VK_HOME,0,100);
            sleep(0.3);
        endif            
    endif

    ifb mWFx1 = 0
        ifb chkimg("../picture/白狐.bmp",0,x1,y1,x2,y2)
            KBD(VK_CTRL,0,100);
            lib.SetCoordinate(mWFx1, mWFy1, mWFx2, mWFy2);
            exit;
        elseif chkimg("../picture/WhiteFox.bmp",0,x1,y1,x2,y2)
            KBD(VK_CTRL,0,100);
            lib.SetCoordinate(mWFx1, mWFy1, mWFx2, mWFy2);
            exit;
        endif
    else
        ifb chkimg("../picture/白狐.bmp",0,mWFx1, mWFy1, mWFx2, mWFy2)
            KBD(VK_CTRL,0,100);
            for i = 1 to 3
                KBD(VK_A,0,200 + random(30))
            next
            exit;
        elseif chkimg("../picture/WhiteFox.bmp",0,mWFx1, mWFy1, mWFx2, mWFy2)
            KBD(VK_CTRL,0,100);
            for i = 1 to 3
                KBD(VK_A,0,200 + random(30))
            next
            exit;
        endif
    endif

    ifb mOyabunTime < GETTIME()
        KBD(VK_W,0,800);
        mOyabunTime = GETTIME( 30 / 86400 );
    endif

    ifb mSiMx1 = 0
        ifb chkimg(lib.picPathHelper("SpiderInMirror"),0,x1,y1,x2,y2)
            KBD(VK_END,0,500);
            lib.SetCoordinate(mSiMx1, mSiMy1, mSiMx2, mSiMy2);
        endif
    else
        ifb chkimg(lib.picPathHelper("SpiderInMirror"),0,mSiMx1, mSiMy1, mSiMx2, mSiMy2)
            KBD(VK_END,0,500);
        endif            
    endif

    ifb chkimg("../picture/暁5thMH.bmp")
        KBD(VK_R,0,500);
    endif

    ifb chkimg("../picture/5th_oyabun.bmp")
        ifb oyabunTime5th < GETTIME();
            for i = 1 to 2
                KBD(VK_F9,0,125);
            next
            oyabunTime5th = GETTIME( 60 / 86400 )
        endif
    endif

    ifb chkimg(lib.picPathHelper("kishin"),0,0,0,1366,800) 
        while true
            KBD(VK_H,0,500);
            KBD(VK_H,0,500);
            if !chkimg(lib.picPathHelper("kishin"),0,0,0,1366,800) then break;
        wend
    endif

    result = 0;
fend

procedure parallelProgramWaitMode()

    path = "../MapleManagement/status/Kannna/status";
    manager.WritePlayerNotEncoutStatus(path);
    isEncount = false;

    while TRUE
        ifb chkimg("../picture/石化2.bmp",0,0,0,1368,800)
            for i = 1 to 20
                KBD(VK_LEFT,0,100);
                KBD(VK_RIGHT,0,100);
            next
        endif

        ifb chkimg("../picture/赤点.bmp",0,0,0,300,300)
            logger.logWriter(LogLevel.LOG_WARN,Messages.DETECTION_RED_POINT);
            lib.alartSound();
            //exitexit;
        endif
        
        ifb chkimg(lib.picPathHelper("redpoint2"),0,0,0,300,300)
            manager.WritePlayerEncoutStatus(path)
            isEncount = true;
            lib.alartSound();
            sleep(1);
            //exitexit;
        else
            ifb isEncount = true
                lib.alartSound();
                manager.WritePlayerNotEncoutStatus(path);
                isEncount = false;
            endif
        endif

        ifb  chkimg("../picture/緑点.bmp",0,0,0,200,160)
            logger.logWriter(LogLevel.LOG_WARN,Messages.DISCOVERY_GREEN_POINT);
            exitexit;
        endif
    wend
fend
