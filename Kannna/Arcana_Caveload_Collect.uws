//=========================================//
// Map Name    : ケーヴロード                  //
//=========================================//
// Mob Name    : 
// Mob Level   : 
// Mob HP      : 
// Mob Exp     : 
//=========================================//
// comment     : None
// param       : None
// return      : None
// ========================================//
// Display Dpl : 800x600 or 1366x768
//=========================================//
// Copy Right (C) 2019 All Right Reserved. 
//   @author k.kawabata @kawaken1025
//     Create Date : 2019/05/06
//=========================================//

//MapleAPI : LogWriter.uws , MapleLibrary.uws , UseSkillFiveJob.uws
CALL ../MapleAPI/MapleAPI.uws;
//Move Window initSetting x = 1 , y = 1
lib.activeWindow();
//multiThread checkRedPoint and checkMineralization
thread lib.parallelProgram();

while true
    skillTime = gettime( 20 / 86400 );
    KBD(VK_G,0,1000)
    for i = 1 to 3
        KBD(VK_H,0,1000)
    next
    while true
        checkYellowPoint();
        if gettime() > skillTime then break;
        ifb chkimg("../picture/LingStone.bmp",0,800,600,1366,800)
            KBD(VK_HOME,0,2000);
            sleep(1);
            KBD(VK_U,0,1000)
            KBD(VK_F5,0,1000)
            KBD(VK_F,1,2000)
            for i = 1 to 5
                for j = 1 to 5
                    sleep(0.9);
                next
                KBD(VK_U,0,300)
            next
            KBD(VK_F,2,3000)
        endif
    wend
    logger.logWriter(LogLevel.LOG_INFO,Messages.START_COLLECT);
    collect();
wend

function checkYellowPoint()

    ifb chkimg("../picture/yellowPoint.bmp",0,40,120,86,142)
        KBD(VK_B,0,500);
        SLEEP(1.2);
        KBD(VK_RIGHT,1,500);
        while true
            if chkimg("../picture/yellowPoint.bmp",0,84,101,99,122) then break;
            ifb chkimg("../picture/yellowPoint.bmp",0,40,120,86,142)
                KBD(VK_B,0,1000)
            endif
        wend
        KBD(VK_RIGHT,2,100);
    endif

    ifb chkimg("../picture/yellowPoint.bmp",0,100,0,160,142)
        KBD(VK_B,0,500);
        SLEEP(1.2);
        KBD(VK_LEFT,1,500);
        while true
            ifb chkimg("../picture/yellowPoint.bmp",0,0,0,33,160)
                KBD(VK_LEFT,2,300);
                init();
            endif
            if chkimg("../picture/yellowPoint.bmp",0,84,101,99,122) then break;
        wend
        KBD(VK_LEFT,2,100);
    endif

    ifb chkimg("../picture/yellowPoint.bmp",0,0,0,33,133)
        init()
    endif

    result = 0;
fend

function init()
        KBD(VK_RIGHT,1,500);
        while true
            if chkimg("../picture/yellowPoint.bmp",0,50,121,75,135) then break;
        wend
        KBD(VK_RIGHT,2,100);
        KBD(VK_B,0,500);
        SLEEP(1);
        KBD(VK_RIGHT,1,300)
        while true
            if chkimg("../picture/yellowPoint.bmp",0,84,101,99,122) then break;
            if chkimg("../picture/yellowPoint.bmp",0,50,121,75,135) then KBD(VK_B,0,500);
        wend
        KBD(VK_RIGHT,2,100);
        result = 0;
fend


function collect()
        while true
            KBD(VK_RIGHT,1,500);
            if chkimg("../picture/yellowPoint.bmp",0,130,120,150,140) then break;
            ifb chkimg("../picture/yellowPoint.bmp",0,50,121,75,135) 
                KBD(VK_RIGHT,2,100);
                KBD(VK_B,0,500);
            endif
        wend
        KBD(VK_RIGHT,2,100);
        KBD(VK_B,0,500);
        SLEEP(3.2);
        KBD(VK_LEFT,1,300)
        while true
            if chkimg("../picture/yellowPoint.bmp",0,45,120,60,140) then break;
            if chkimg("../picture/yellowPoint.bmp",0,0,0,33,160) then break;
        wend
        KBD(VK_LEFT,2,100);
        KBD(VK_B,0,500);
        SLEEP(3.2)
        KBD(VK_RIGHT,1,300)
        while true
            if chkimg("../picture/yellowPoint.bmp",0,84,101,99,122) then break;
            ifb chkimg("../picture/yellowPoint.bmp",0,50,121,75,135) 
                KBD(VK_RIGHT,2,100);
                KBD(VK_B,0,500);
                SLEEP(3.2);
                KBD(VK_RIGHT,1,500);
            endif
        wend
        KBD(VK_RIGHT,2,100);
        result = 0;
fend