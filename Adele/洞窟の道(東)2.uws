
CALL ../MapleAPI/MapleAPI.uws;
CALL AdeleUtil.uws;
CALL KeySetting.uws;

lib.activeWindow();
thread parallelProgram();

skillTime = GETTIME( 140 / 86400 )
petTime = GETTIME( 600 / 86400 )

KBD(VK_G,0,1000)
SLEEP(3)
cnt = 0

while true

    ifb pettime < GETTIME()
        KBD(VK_T,0,1000);
        petTime = GETTIME( 600 / 86400 );
    endif

    KBD(VK_LEFT,1,500);
    while true
        attack();
        if chkimg(lib.picPathHelper("yellowPoint"),0,0,0,40,140) then break;
        //urgentCheck();
        //lib.checkStartingMapleStory();
    wend
    KBD(VK_LEFT,2,200);
    //checkRuneStage()

    KBD(VK_RIGHT,1,500)
    while true
        attack();
        if chkimg(lib.picPathHelper("yellowPoint"),0,200,80,250,160) then break;
        //urgentCheck();
        //lib.checkGameMaster();
    wend
    KBD(VK_RIGHT,2,200);
    ifb cnt > 2
        upStage();
        cnt = 0
    else
        cnt = cnt + 1
    endif
    //SLEEP(0.5);
    checkRuneStage()
    //downStage();
    //sleep(0.5);
    util.adeleSkillCheck();
    thread skill.pSkill();

    ifb skillTime < GETTIME()
        KBD(VK_G,0,1000)
        SLEEP(3)
        skillTime = GETTIME( 140 / 86400 )
    endif

wend

function attack()
    util.jumpAttack();
    result = 0;
fend

function upStage()

    KBD(VK_LEFT,1,100)
    while true
        if chkimg(lib.picPathHelper("yellowPoint"),0,0,0,210,140) then break;
    wend
    KBD(VK_LEFT,2,10)
    KBD(VK_UP,1)
    KBD(VK_SHIFT,1,300)
    for i = 1 to 5
        KBD(VK_O,1,100)
    next
    KBD(VK_SHIFT,2,10)
    KBD(VK_O,2,10)
    KBD(VK_UP,2,10)   
    result = 0;
fend

function downStage()

    KBD(VK_DOWN,1,500)
    KBD(VK_C,0,100)
    KBD(VK_C,0,100)
    KBD(VK_C,0,100)
    KBD(VK_DOWN,2,10)
      
    result = 0;
fend

//=========================================
// param   : None 
// comment : ルーンが出現しているか確認
//=========================================
function checkRuneStage()

    // 上段にあるか
    ifb chkimg(lib.picPathHelper("runePoint"),0,0,0,230,119)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを上段で発見しました。");
        upStage();
        moveStage(1);
        result = constant.DISCOVERY_RUNE;
    elseif chkimg(lib.picPathHelper("runePoint"),0,0,120,240,145)
        logger.logWriter(LogLevel.LOG_INFO,"ルーンを下段で発見しました。");
        moveStage(2);
        result = constant.DISCOVERY_RUNE;
    endif
    
    result = constant.UNDISCOVERED_RUNE;
fend


//=========================================
// param   : 1 or 2
// comment : ルーンが出現している段へ移動
//=========================================
function moveStage(num)

    // 上段にルーンがある場合は終了
    ifb num = 1
        result = 0;
    
    // 下段にある場合は下ジャンプ
    else
        DownJump();
        result = 0;
    endif
    lib.OpenRune();
    
    result = 0;
fend

function DownJump()
    KBD(VK_DOWN,1,50)
    for i = 1 to 3
        KBD(VK_C,0,100)
    next
    KBD(VK_DOWN,2,100)
    result = false;
fend

//=========================================
// comment : 異常の確認
// param   : None
// return  : 0
//=========================================
public areaBossEncount = 0;
function urgentCheck()

    ifb  chkimg("../picture/エリボス.bmp",0,0,0,800,200)    	
        ifb areaBossEncount = 0 // 初回のみログを出す
            areaBossEncount = 1;
            logger.logWriter(LogLevel.LOG_WARN,"エリアボスを検出しました");
        else
            SOUND(" ");
        endif
    endif
    
    ifb  chkimg("../picture/緑点.bmp",0,0,0,215,200)
        logger.logWriter(LogLevel.LOG_WARN,Messages.DISCOVERY_GREEN_POINT);
        exitexit;
    endif
    ifb chkimg("../picture/突発.bmp",0,0,0,1368,800);
        for i = 1 to 3
            BTN(LEFT,CLICK,G_IMG_X,G_IMG_Y,200);
        next
    endif
    if chkimg("../picture/talkEnd.bmp",0,0,0,1368,800) then BTN(LEFT,CLICK,G_IMG_X,G_IMG_Y,500);

    ifb chkimg("../picture/guild_member.bmp",0,0,0,300,300)
        logger.logWriter(LogLevel.LOG_WARN, "ギルドメンバーを検知しました。");
        lib.alartSound();
    endif

    result = MAPLE_RESULT_OK; 
fend



//=========================================
//
// comment : 石化チェック・赤点チェック・加護チェック
// param   : None
// return  : 0 
//
//=========================================
procedure parallelProgram()
    while TRUE
        ifb chkimg("../picture/石化2.bmp",0,0,0,1368,800)
            for i = 1 to 20
                KBD(VK_LEFT,0,100);
                KBD(VK_RIGHT,0,100);
            next
        endif
        ifb chkimg("../picture/赤点.bmp",0,0,0,1368,800)
            logger.logWriter(LogLevel.LOG_WARN,Messages.DETECTION_RED_POINT);
            lib.alartSound();  
        endif   

        ifb chkimg("../picture/redpoint2.bmp",0,0,0,200,200)
            logger.logWriter(LogLevel.LOG_WARN,Messages.DETECTION_RED_POINT);
            lib.alartSound();
        endif   

        ifb chkimg("../picture/緑点.bmp",0,0,0,215,200)
            logger.logWriter(LogLevel.LOG_WARN,Messages.DISCOVERY_GREEN_POINT);
            exitexit;
        endif
    wend
fend