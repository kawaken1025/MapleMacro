//=====================================
//
// 5th Job use Skill (Luminous 5th job)
//   @author k.kawabata
//     create date 2018/02/09
// 
//=====================================
CALL pKeySetting.uws
CALL ../../Illium/KeySetting.uws;
//CALL ../../lib/MapleLibrary.uws;

CLASS skill
//=====================================
// use Skill
//
// comment : None
// param   : None
// return  : 0 (Success)
//=====================================
function luminous_useSkill()
    KBD(VK_G,0,500)
    KBD(VK_H,0,3000)
    //KBD(VK_6,0,1100)
    KBD(VK_F8,0,1000)
    //焼きそば Display Dpl : 1366x8768
    KBD(VK_R,0,500)
    BTN(LEFT,CLICK,731,470,1000)

    result = 0
fend

//===========================
// Common : パサーブルスキル
//===========================
// PHS座標情報
public mPHSx1 = 0;
public mPHSx2 = 0;
public mPHSy1 = 0;
public mPHSy2 = 0;
// PSE座標情報
public mPSEx1 = 0;
public mPSEx2 = 0;
public mPSEy1 = 0;
public mPSEy2 = 0;

function pSkill()
    // PHSチェック 
    ifb chkimg("../picture/PHS.bmp",0,840,655,1366,800)
        // ifb mPHSx1 = 0
             KBD(pSkillKey.P_HOLY_SYMBOL,0,1000);
        //     //lib.SetCoordinate(mPHSx1, mPHSy1, mPHSx2, mPHSy2);
        // else
        //     KBD(pSkillKey.P_HOLY_SYMBOL,0,1000);
        // endif
    endif
    
    // PCOチェック
    ifb chkimg("../picture/PCO.bmp",0,840,655,1366,800)
         KBD(pSkillKey.P_COMBAT_ORDER_KEY,0,1000);
    endif 
    // // PSEチェック
    ifb chkimg("../picture/PSE.bmp",0,840,655,1366,800)
    //     ifb mPSEx1 = 0
        KBD(pSkillKey.P_SHARP_EYES_KEY,0,500);
    //         //lib.SetCoordinate(mPSEx1, mPSEy1, mPSEx2, mPSEy2);
    //     else
    //         KBD(pSkillKey.P_SHARP_EYES_KEY,0,500);
    //     endif       
    endif
    

    // PWBチェック
    ifb chkimg("../picture/PWB.bmp",0,840,655,1366,800) 
        KBD(pSkillKey.P_WIND_BOOSTER,0,500);
    endif

    // PHBチェック
    ifb chkimg("../picture/PHB.bmp",0,840,700,1366,800)
        KBD(pSkillKey.P_HYPER_BODY_KEY,0,500);
    endif
    result = 0;
fend
//============================
// ルミナス：クールタイムスキル
//============================
function luminous_skillCheck()

    //Display Dpl 1366 x 768
    if chkimg(lib.picPathHelper("扉"),0,840,700,1033,800)             then KBD(VK_T,0,500);
    if chkimg(lib.picPathHelper("パニシング"),0,840,700,1033,800)      then KBD(VK_Q,0,500);
    if chkimg(lib.picPathHelper("パニシング_1366"),0,840,700,1033,800) then KBD(VK_Q,0,500);
    if chkimg(lib.picPathHelper("ヒーローズオース"),0,840,700,1033,800) then KBD(VK_N,0,500);
    if chkimg(lib.picPathHelper("SpiderInMirror"),0,840,700,1033,800) then KBD(VK_DELETE,0,500);
    pSkill();

    result = 0
fend

//===========================
// イリウム：補助スキル
//===========================
function illiumSupportSkill()
    KBD(VK_T,0,500)
    KBD(VK_G,0,1000)
    KBD(VK_H,0,2000)
    KBD(VK_8,0,1000)

    result = 0
fend
//============================
// イリウム：クールタイムスキル
//============================
function illiumSkillCheck(deusKey,fastChargeKey,longinusZoneKey,raceOfGodKey,gramHolderKey)
    if chkimg(lib.picPathHelper("deus"),0,0,0,1366,800)          then KBD(deusKey,0,700);
    if chkimg(lib.picPathHelper("FastCharge"),0,0,0,1366,800)    then FastChargerAttack(fastChargeKey);
    if chkimg(lib.picPathHelper("LonginusZone"),0,0,0,1366,800)  then KBD(longinusZoneKey,0,700);
    if chkimg(lib.picPathHelper("RaceOfGod"),0,0,0,1366,800)     then KBD(raceOfGodKey,0,700);
    if chkimg(lib.picPathHelper("GramHolder"),0,0,0,1366,800)    then KBD(gramHolderKey,0,700);
    result = 0;
fend

function FastChargerAttack(FastChargeKey)
    for i = 1 to 2
        KBD(VK_SHIFT,0,200);
    next
    KBD(FastChargeKey,0,700);
    time = GETTIME( 10 / 86400);
    while GETTIME() < time
        KBD(VK_X,0,150);
        KBD(VK_A,0,10);
    wend
    result = 0;
fend

ENDCLASS